Component: ARM Compiler 5.06 update 7 (build 960) Tool: armlink [4d3601]

==============================================================================

Section Cross References

    main.o(i.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(i.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(i.HAL_GetTick) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    main.o(i.HAL_GetTick) refers to main.o(.data) for ticks
    main.o(i.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(i.SystemClock_Config) refers to main.o(i.Error_Handler) for Error_Handler
    main.o(i.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(i.SystemClock_Config) refers to stm32f4xx_hal.o(i.HAL_GetREVID) for HAL_GetREVID
    main.o(i.Th_test) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    main.o(i.Th_test) refers to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    main.o(i.Th_test) refers to _printf_dec.o(.text) for _printf_int_dec
    main.o(i.Th_test) refers to noretval__2printf.o(.text) for __2printf
    main.o(i.Th_test) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.init_Th_test) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.init_Th_test) refers to main.o(i.Th_test) for Th_test
    main.o(i.init_Th_test) refers to main.o(.data) for id_Th_test
    main.o(i.main) refers to stm32f4xx_hal.o(i.HAL_Init) for HAL_Init
    main.o(i.main) refers to main.o(i.SystemClock_Config) for SystemClock_Config
    main.o(i.main) refers to system_stm32f4xx.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to keypad.o(i.init_Th_keypad) for init_Th_keypad
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    keypad.o(i.GPIO_Init) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init) for HAL_GPIO_Init
    keypad.o(i.GPIO_Init) refers to keypad.o(.bss) for GPIO_InitStruct
    keypad.o(i.Init_MsgQueue_keypad) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    keypad.o(i.Init_MsgQueue_keypad) refers to keypad.o(.data) for id_MsgQueue_keypad
    keypad.o(i.Th_keypad) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    keypad.o(i.Th_keypad) refers to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    keypad.o(i.Th_keypad) refers to _printf_str.o(.text) for _printf_str
    keypad.o(i.Th_keypad) refers to keypad.o(i.GPIO_Init) for GPIO_Init
    keypad.o(i.Th_keypad) refers to keypad.o(i.read_keypad) for read_keypad
    keypad.o(i.Th_keypad) refers to noretval__2printf.o(.text) for __2printf
    keypad.o(i.Th_keypad) refers to rtx_delay.o(.text.osDelay) for osDelay
    keypad.o(i.Th_keypad) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    keypad.o(i.Th_keypad) refers to keypad.o(.data) for key
    keypad.o(i.get_id_MsgQueue_keypad) refers to keypad.o(.data) for id_MsgQueue_keypad
    keypad.o(i.init_Th_keypad) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    keypad.o(i.init_Th_keypad) refers to keypad.o(i.Init_MsgQueue_keypad) for Init_MsgQueue_keypad
    keypad.o(i.init_Th_keypad) refers to keypad.o(i.Th_keypad) for Th_keypad
    keypad.o(i.init_Th_keypad) refers to keypad.o(.data) for id_Th_keypad
    keypad.o(i.read_keypad) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    keypad.o(i.read_keypad) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin) for HAL_GPIO_ReadPin
    keypad.o(i.read_keypad) refers to keypad.o(.data) for key
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.idle.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.timer.stack) for os_timer_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.constdata) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    spi_stm32f4xx.o(i.SPI1_Control) refers to spi_stm32f4xx.o(i.SPI_Control) for SPI_Control
    spi_stm32f4xx.o(i.SPI1_Control) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_GetDataCount) refers to spi_stm32f4xx.o(i.SPI_GetDataCount) for SPI_GetDataCount
    spi_stm32f4xx.o(i.SPI1_GetDataCount) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_GetStatus) refers to spi_stm32f4xx.o(i.SPI_GetStatus) for SPI_GetStatus
    spi_stm32f4xx.o(i.SPI1_GetStatus) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_IRQHandler) refers to spi_stm32f4xx.o(i.SPI_IRQHandler) for SPI_IRQHandler
    spi_stm32f4xx.o(i.SPI1_IRQHandler) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_Initialize) refers to spi_stm32f4xx.o(i.SPI_Initialize) for SPI_Initialize
    spi_stm32f4xx.o(i.SPI1_Initialize) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_PowerControl) refers to spi_stm32f4xx.o(i.SPI_PowerControl) for SPI_PowerControl
    spi_stm32f4xx.o(i.SPI1_PowerControl) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_Receive) refers to spi_stm32f4xx.o(i.SPI_Receive) for SPI_Receive
    spi_stm32f4xx.o(i.SPI1_Receive) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_Send) refers to spi_stm32f4xx.o(i.SPI_Send) for SPI_Send
    spi_stm32f4xx.o(i.SPI1_Send) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_Transfer) refers to spi_stm32f4xx.o(i.SPI_Transfer) for SPI_Transfer
    spi_stm32f4xx.o(i.SPI1_Transfer) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPI1_Uninitialize) refers to spi_stm32f4xx.o(i.SPI_Uninitialize) for SPI_Uninitialize
    spi_stm32f4xx.o(i.SPI1_Uninitialize) refers to spi_stm32f4xx.o(.constdata) for SPI1_Resources
    spi_stm32f4xx.o(i.SPIX_GetCapabilities) refers to spi_stm32f4xx.o(.constdata) for DriverCapabilities
    spi_stm32f4xx.o(i.SPIX_GetVersion) refers to spi_stm32f4xx.o(.constdata) for DriverVersion
    spi_stm32f4xx.o(i.SPI_Control) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    spi_stm32f4xx.o(i.SPI_Control) refers to spi_stm32f4xx.o(i.SPI_PeripheralReset) for SPI_PeripheralReset
    spi_stm32f4xx.o(i.SPI_Control) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi_stm32f4xx.o(i.SPI_Control) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    spi_stm32f4xx.o(i.SPI_Control) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    spi_stm32f4xx.o(i.SPI_Control) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init) for HAL_GPIO_Init
    spi_stm32f4xx.o(i.SPI_Control) refers to spi_stm32f4xx.o(i.Enable_GPIO_Clock) for Enable_GPIO_Clock
    spi_stm32f4xx.o(i.SPI_IRQHandler) refers to spi_stm32f4xx.o(i.SPI_RxData) for SPI_RxData
    spi_stm32f4xx.o(i.SPI_IRQHandler) refers to spi_stm32f4xx.o(i.SPI_TxData) for SPI_TxData
    spi_stm32f4xx.o(i.SPI_Initialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi_stm32f4xx.o(i.SPI_Initialize) refers to spi_stm32f4xx.o(i.Enable_GPIO_Clock) for Enable_GPIO_Clock
    spi_stm32f4xx.o(i.SPI_Initialize) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init) for HAL_GPIO_Init
    spi_stm32f4xx.o(i.SPI_PowerControl) refers to spi_stm32f4xx.o(i.SPI_Control) for SPI_Control
    spi_stm32f4xx.o(i.SPI_PowerControl) refers to spi_stm32f4xx.o(i.SPI_PeripheralReset) for SPI_PeripheralReset
    spi_stm32f4xx.o(i.SPI_PowerControl) refers to stm32f4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    spi_stm32f4xx.o(i.SPI_PowerControl) refers to spi_stm32f4xx.o(i.Disable_SPI_Clock) for Disable_SPI_Clock
    spi_stm32f4xx.o(i.SPI_PowerControl) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi_stm32f4xx.o(i.SPI_PowerControl) refers to spi_stm32f4xx.o(i.Enable_SPI_Clock) for Enable_SPI_Clock
    spi_stm32f4xx.o(i.SPI_Receive) refers to spi_stm32f4xx.o(i.SPI_TxData) for SPI_TxData
    spi_stm32f4xx.o(i.SPI_Send) refers to spi_stm32f4xx.o(i.SPI_TxData) for SPI_TxData
    spi_stm32f4xx.o(i.SPI_Transfer) refers to spi_stm32f4xx.o(i.SPI_TxData) for SPI_TxData
    spi_stm32f4xx.o(i.SPI_Uninitialize) refers to spi_stm32f4xx.o(i.SPI_PowerControl) for SPI_PowerControl
    spi_stm32f4xx.o(i.SPI_Uninitialize) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    spi_stm32f4xx.o(.constdata) refers to stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq) for HAL_RCC_GetPCLK2Freq
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(.bss) for SPI1_Info
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPIX_GetVersion) for SPIX_GetVersion
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPIX_GetCapabilities) for SPIX_GetCapabilities
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_Initialize) for SPI1_Initialize
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_Uninitialize) for SPI1_Uninitialize
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_PowerControl) for SPI1_PowerControl
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_Send) for SPI1_Send
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_Receive) for SPI1_Receive
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_Transfer) for SPI1_Transfer
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_GetDataCount) for SPI1_GetDataCount
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_Control) for SPI1_Control
    spi_stm32f4xx.o(.constdata) refers to spi_stm32f4xx.o(i.SPI1_GetStatus) for SPI1_GetStatus
    eventrecorder.o(i.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.EventGetTS) refers to eventrecorder.o(i.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(i.EventGetTS) refers to eventrecorder.o(.emb_text) for __asm___15_EventRecorder_c_e8d3082c__atomic_wr8
    eventrecorder.o(i.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.EventGetTS) refers to eventrecorder.o(.data) for TS_OverflowLock
    eventrecorder.o(i.EventRecord2) refers to eventrecorder.o(i.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(i.EventRecord2) refers to eventrecorder.o(i.EventGetTS) for EventGetTS
    eventrecorder.o(i.EventRecord2) refers to eventrecorder.o(i.EventRecordItem) for EventRecordItem
    eventrecorder.o(i.EventRecord4) refers to eventrecorder.o(i.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(i.EventRecord4) refers to eventrecorder.o(i.EventGetTS) for EventGetTS
    eventrecorder.o(i.EventRecord4) refers to eventrecorder.o(i.GetContext) for GetContext
    eventrecorder.o(i.EventRecord4) refers to eventrecorder.o(i.EventRecordItem) for EventRecordItem
    eventrecorder.o(i.EventRecordData) refers to eventrecorder.o(i.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(i.EventRecordData) refers to eventrecorder.o(i.EventGetTS) for EventGetTS
    eventrecorder.o(i.EventRecordData) refers to eventrecorder.o(i.EventRecordItem) for EventRecordItem
    eventrecorder.o(i.EventRecordData) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(i.EventRecordData) refers to eventrecorder.o(i.GetContext) for GetContext
    eventrecorder.o(i.EventRecordItem) refers to eventrecorder.o(.emb_text) for __asm___15_EventRecorder_c_e8d3082c__atomic_inc32
    eventrecorder.o(i.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.EventRecorderClockUpdate) refers to eventrecorder.o(i.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(i.EventRecorderClockUpdate) refers to eventrecorder.o(i.EventGetTS) for EventGetTS
    eventrecorder.o(i.EventRecorderClockUpdate) refers to eventrecorder.o(i.EventRecordItem) for EventRecordItem
    eventrecorder.o(i.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(i.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(i.EventRecorderInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(i.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(i.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(i.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(i.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(i.EventGetTS) for EventGetTS
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(i.EventRecordItem) for EventRecordItem
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(i.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(.constdata) for EventRecorderInfo
    eventrecorder.o(i.EventRecorderInitialize) refers to eventrecorder.o(.data) for TS_OverflowLock
    eventrecorder.o(i.EventRecorderStart) refers to eventrecorder.o(i.EventGetTS) for EventGetTS
    eventrecorder.o(i.EventRecorderStart) refers to eventrecorder.o(i.EventRecordItem) for EventRecordItem
    eventrecorder.o(i.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.EventRecorderStop) refers to eventrecorder.o(i.EventGetTS) for EventGetTS
    eventrecorder.o(i.EventRecorderStop) refers to eventrecorder.o(i.EventRecordItem) for EventRecordItem
    eventrecorder.o(i.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.EventRecorderTimerGetCount) refers to eventrecorder.o(i.SysTimerIsRunning) for SysTimerIsRunning
    eventrecorder.o(i.EventRecorderTimerGetCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    eventrecorder.o(i.EventRecorderTimerGetFreq) refers to eventrecorder.o(i.SysTimerIsRunning) for SysTimerIsRunning
    eventrecorder.o(i.EventRecorderTimerGetFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for osKernelGetSysTimerFreq
    eventrecorder.o(i.EventRecorderTimerSetup) refers to eventrecorder.o(.data) for SysTimerState
    eventrecorder.o(i.GetContext) refers to eventrecorder.o(.emb_text) for __asm___15_EventRecorder_c_e8d3082c__atomic_inc8
    eventrecorder.o(i.GetContext) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(i.SysTimerIsRunning) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    eventrecorder.o(i.SysTimerIsRunning) refers to eventrecorder.o(.data) for SysTimerState
    eventrecorder.o(.constdata) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    retarget_io.o(i.ITM_ReceiveChar) refers to retarget_io.o(.data) for ITM_RxBuffer
    retarget_io.o(i._sys_open) refers to strcmpv7m.o(.text) for strcmp
    retarget_io.o(i._sys_write) refers to retarget_io.o(i.stdout_putchar) for stdout_putchar
    retarget_io.o(i.stdout_putchar) refers to retarget_io.o(i.ITM_SendChar) for ITM_SendChar
    stm32f4xx_hal.o(i.HAL_DeInit) refers to stm32f4xx_hal.o(i.HAL_MspDeInit) for HAL_MspDeInit
    stm32f4xx_hal.o(i.HAL_Delay) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal.o(i.HAL_Delay) refers to stm32f4xx_hal.o(.data) for uwTickFreq
    stm32f4xx_hal.o(i.HAL_GetTick) refers to stm32f4xx_hal.o(.data) for uwTick
    stm32f4xx_hal.o(i.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.data) for uwTickFreq
    stm32f4xx_hal.o(i.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.data) for uwTickPrio
    stm32f4xx_hal.o(i.HAL_IncTick) refers to stm32f4xx_hal.o(.data) for uwTick
    stm32f4xx_hal.o(i.HAL_Init) refers to stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal.o(i.HAL_Init) refers to stm32f4xx_hal.o(i.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(i.HAL_Init) refers to stm32f4xx_hal.o(i.HAL_MspInit) for HAL_MspInit
    stm32f4xx_hal.o(i.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f4xx_hal.o(i.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal.o(i.HAL_InitTick) refers to stm32f4xx_hal.o(.data) for uwTickFreq
    stm32f4xx_hal.o(i.HAL_InitTick) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal.o(i.HAL_SetTickFreq) refers to stm32f4xx_hal.o(i.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(i.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data) for uwTickFreq
    stm32f4xx_hal_cortex.o(i.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f4xx_hal_dma.o(i.DMA_CalcBaseAndBitshift) refers to stm32f4xx_hal_dma.o(.constdata) for flagBitshiftOffset
    stm32f4xx_hal_dma.o(i.HAL_DMA_Abort) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(i.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(i.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(i.HAL_DMA_IRQHandler) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_dma.o(i.HAL_DMA_Init) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(i.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(i.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32f4xx_hal_dma.o(i.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(i.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(i.HAL_DMA_PollForTransfer) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(i.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_dma.o(i.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(i.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(i.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma_ex.o(i.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(i.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_dma_ex.o(i.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(i.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f4xx_hal_pwr.o(i.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(i.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_DisableBkUpReg) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_DisableOverDrive) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableBkUpReg) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableOverDrive) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(i.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.constdata) for AHBPrescTable
    stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.data) for uwTickPrio
    stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.constdata) for APBPrescTable
    stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.constdata) for APBPrescTable
    stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc.o(i.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_rcc.o(i.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(i.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_DisablePLLI2S) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_DisablePLLSAI) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_EnablePLLI2S) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_EnablePLLSAI) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCC_DeInit) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(i.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCC_DeInit) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_rcc_ex.o(i.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.data) for uwTickPrio
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(i.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(i.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(i.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(i.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(i.SPI_DMATxAbortCallback) for SPI_DMATxAbortCallback
    stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(i.SPI_DMARxAbortCallback) for SPI_DMARxAbortCallback
    stm32f4xx_hal_spi.o(i.HAL_SPI_DMAStop) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(i.HAL_SPI_DeInit) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_MspDeInit) for HAL_SPI_MspDeInit
    stm32f4xx_hal_spi.o(i.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(i.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(i.SPI_DMAAbortOnError) for SPI_DMAAbortOnError
    stm32f4xx_hal_spi.o(i.HAL_SPI_Init) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_MspInit) for HAL_SPI_MspInit
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA) for HAL_SPI_TransmitReceive_DMA
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT) for HAL_SPI_TransmitReceive_IT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(i.SPI_RxISR_16BIT) for SPI_RxISR_16BIT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(i.SPI_RxISR_8BIT) for SPI_RxISR_8BIT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAHalfTransmitReceiveCplt) for SPI_DMAHalfTransmitReceiveCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt) for SPI_DMATransmitReceiveCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_16BIT) for SPI_2linesRxISR_16BIT
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(i.SPI_2linesTxISR_16BIT) for SPI_2linesTxISR_16BIT
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_8BIT) for SPI_2linesRxISR_8BIT
    stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(i.SPI_2linesTxISR_8BIT) for SPI_2linesTxISR_8BIT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt) for SPI_DMAHalfTransmitCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMATransmitCplt) for SPI_DMATransmitCplt
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(i.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(i.SPI_TxISR_16BIT) for SPI_TxISR_16BIT
    stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(i.SPI_TxISR_8BIT) for SPI_TxISR_8BIT
    stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_16BITCRC) for SPI_2linesRxISR_16BITCRC
    stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_16BITCRC) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_8BITCRC) for SPI_2linesRxISR_8BITCRC
    stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_8BITCRC) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_2linesTxISR_16BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_2linesTxISR_8BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_AbortRx_ISR) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_spi.o(i.SPI_DMAAbortOnError) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_DMAError) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_DMAHalfReceiveCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_RxHalfCpltCallback) for HAL_SPI_RxHalfCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TxHalfCpltCallback) for HAL_SPI_TxHalfCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TxRxHalfCpltCallback) for HAL_SPI_TxRxHalfCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMARxAbortCallback) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(i.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitCplt) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMATxAbortCallback) refers to stm32f4xx_hal_spi.o(i.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(i.SPI_DMATxAbortCallback) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_spi.o(i.SPI_EndRxTransaction) refers to stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) refers to stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    stm32f4xx_hal_spi.o(i.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(i.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(i.SPI_RxISR_16BITCRC) for SPI_RxISR_16BITCRC
    stm32f4xx_hal_spi.o(i.SPI_RxISR_16BITCRC) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(i.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(i.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(i.SPI_RxISR_8BITCRC) for SPI_RxISR_8BITCRC
    stm32f4xx_hal_spi.o(i.SPI_RxISR_8BITCRC) refers to stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(i.SPI_TxISR_16BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_TxISR_8BIT) refers to stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) refers to main.o(i.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    startup_stm32f429xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(STACK) for __initial_sp
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(.text) for Reset_Handler
    startup_stm32f429xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f429xx.o(RESET) refers to spi_stm32f4xx.o(i.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_stm32f429xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(.text) refers to system_stm32f4xx.o(i.SystemInit) for SystemInit
    startup_stm32f429xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f429xx.o(.text) refers to startup_stm32f429xx.o(HEAP) for Heap_Mem
    startup_stm32f429xx.o(.text) refers to startup_stm32f429xx.o(STACK) for Stack_Mem
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    system_stm32f4xx.o(i.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.constdata) for AHBPrescTable
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    __2printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    __2printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    noretval__2printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    noretval__2printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) refers (Weak) to _printf_char.o(.text) for _printf_char
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to ferror_locked.o(.text) for ferror
    _printf_char_file.o(.text) refers to fputc_locked.o(.text) for fputc
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    _printf_char_common.o(.text) refers to __printf.o(.text) for __printf
    fputc.o(i.fputc) refers to flsbuf.o(.text) for __flsbuf_byte
    initio.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000005) for __rt_lib_shutdown_stdio_2
    initio.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio.o(.text) refers to fopen_locked.o(.text) for freopen
    initio.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio.o(.text) refers to h1_free_mt.o(.text) for free
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio.o(.text) refers to retarget_io.o(.constdata) for __stdin_name
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fputc_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000024) for __rt_lib_init_stdio_2
    initio_locked.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000005) for __rt_lib_shutdown_stdio_2
    initio_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio_locked.o(.text) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    initio_locked.o(.text) refers to fopen_locked.o(.text) for freopen
    initio_locked.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio_locked.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to h1_free_mt.o(.text) for free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    initio_locked.o(.text) refers to retarget_io.o(.constdata) for __stdin_name
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f429xx.o(.text) for __user_initial_stackheap
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_free_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_free_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.___Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.___Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.___Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i._free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i._posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i._posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i._realloc$realtime) refers to h1_free_mt.o(.text) for free
    heap2.o(i._realloc$realtime) refers to h1_alloc_mt.o(.text) for malloc
    heap2.o(i._realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i._realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._FDIterate) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i.___Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    heap2mt.o(i.___Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i.___Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers to heap2mt.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2mt.o(i.___Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(i._FDIterate) for _FDIterate
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i.___Heap_Valid$realtime$concurrent) refers to heap2mt.o(.conststring) for .conststring
    heap2mt.o(i._free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._free$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_free_mt.o(.text) for free
    heap2mt.o(i._realloc$realtime$concurrent) refers to h1_alloc_mt.o(.text) for malloc
    heap2mt.o(i._realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    heap2mt.o(i._realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    flsbuf.o(.text) refers to stdio.o(.text) for _deferredlazyseek
    flsbuf.o(.text) refers to retarget_io.o(i._sys_flen) for _sys_flen
    flsbuf.o(.text) refers to retarget_io.o(i._sys_istty) for _sys_istty
    flsbuf.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    streamlock.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    fopen.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen.o(.text) refers to retarget_io.o(i._sys_open) for _sys_open
    fopen.o(.text) refers to fseek.o(.text) for _fseek
    fopen.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    fopen.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fclose.o(.text) refers to stdio.o(.text) for _fflush
    fclose.o(.text) refers to retarget_io.o(i._sys_close) for _sys_close
    fclose.o(.text) refers to h1_free_mt.o(.text) for free
    fclose.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen_locked.o(.text) refers to retarget_io.o(i._sys_open) for _sys_open
    fopen_locked.o(.text) refers to fseek.o(.text) for _fseek
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    fopen_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen_locked.o(.text) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fopen_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtred_outer.o(.text) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig_rtred_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtred_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000005) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers (Weak) to initio_locked.o(.text) for _initio
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000005) refers (Weak) to initio_locked.o(.text) for _terminateio
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    flsbuf_fwide.o(.text) refers to flsbuf.o(.text) for __flsbuf
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000005) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.emb_text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_mt.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_mt.o(.text) for __Heap_Initialize
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Special) to h1_init_mt.o(.text) for __Heap_Initialize
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    h1_alloc_mt.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    _printf_char_file_locked.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    _printf_char_file_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fseek.o(.text) refers to retarget_io.o(i._sys_istty) for _sys_istty
    fseek.o(.text) refers to ftell.o(.text) for _ftell_internal
    fseek.o(.text) refers to retarget_io.o(i._sys_flen) for _sys_flen
    fseek.o(.text) refers to stdio.o(.text) for _seterr
    stdio.o(.text) refers to retarget_io.o(i._sys_seek) for _sys_seek
    stdio.o(.text) refers to retarget_io.o(i._sys_write) for _sys_write
    fwritefast.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fwritefast_locked.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast_locked.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fwritefast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    assert_stdio.o(.text) refers to fputs_locked.o(.text) for fputs
    assert_stdio.o(.text) refers to fflush_locked.o(.text) for fflush
    assert_stdio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    maybetermalloc2.o(.emb_text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_mt.o(.text) for free
    h1_init_mt.o(.text) refers to rtx_lib.o(i._mutex_initialize) for _mutex_initialize
    h1_extend_mt.o(.text) refers to h1_free_mt.o(.text) for _free_internal
    fflush.o(.text) refers to stdio.o(.text) for _fflush
    fflush.o(.text) refers to fseek.o(.text) for _fseek
    fflush.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fputs.o(.text) refers to fputc_locked.o(.text) for fputc
    ftell.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fputs_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers to stdio.o(.text) for _fflush
    fflush_locked.o(.text) refers to fseek.o(.text) for _fseek
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(i._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_mt.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(i.__user_perthread_libspace) for __user_perthread_libspace
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_mt.o(.text) for __Heap_Finalize
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_fini_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000011) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000012) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_user_alloc_1
    h1_final_mt.o(.text) refers (Weak) to rtx_lib.o(i._mutex_free) for _mutex_free
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(i.Th_test), (48 bytes).
    Removing main.o(i.init_Th_test), (40 bytes).
    Removing keypad.o(.rev16_text), (4 bytes).
    Removing keypad.o(.revsh_text), (4 bytes).
    Removing keypad.o(.rrx_text), (6 bytes).
    Removing keypad.o(i.get_id_MsgQueue_keypad), (12 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing spi_stm32f4xx.o(.rev16_text), (4 bytes).
    Removing spi_stm32f4xx.o(.revsh_text), (4 bytes).
    Removing spi_stm32f4xx.o(.rrx_text), (6 bytes).
    Removing eventrecorder.o(.rev16_text), (4 bytes).
    Removing eventrecorder.o(.revsh_text), (4 bytes).
    Removing eventrecorder.o(.rrx_text), (6 bytes).
    Removing eventrecorder.o(.emb_text), (132 bytes).
    Removing eventrecorder.o(i.EventCheckFilter), (40 bytes).
    Removing eventrecorder.o(i.EventGetTS), (88 bytes).
    Removing eventrecorder.o(i.EventRecord2), (70 bytes).
    Removing eventrecorder.o(i.EventRecord4), (118 bytes).
    Removing eventrecorder.o(i.EventRecordData), (280 bytes).
    Removing eventrecorder.o(i.EventRecordItem), (212 bytes).
    Removing eventrecorder.o(i.EventRecorderClockUpdate), (44 bytes).
    Removing eventrecorder.o(i.EventRecorderDisable), (92 bytes).
    Removing eventrecorder.o(i.EventRecorderEnable), (92 bytes).
    Removing eventrecorder.o(i.EventRecorderInitialize), (332 bytes).
    Removing eventrecorder.o(i.EventRecorderStart), (48 bytes).
    Removing eventrecorder.o(i.EventRecorderStop), (48 bytes).
    Removing eventrecorder.o(i.EventRecorderTimerGetCount), (22 bytes).
    Removing eventrecorder.o(i.EventRecorderTimerGetFreq), (22 bytes).
    Removing eventrecorder.o(i.EventRecorderTimerSetup), (16 bytes).
    Removing eventrecorder.o(i.GetContext), (16 bytes).
    Removing eventrecorder.o(i.SysTimerIsRunning), (32 bytes).
    Removing eventrecorder.o(i.crc16_ccitt), (66 bytes).
    Removing eventrecorder.o(.data), (2 bytes).
    Removing retarget_io.o(i.ITM_ReceiveChar), (36 bytes).
    Removing retarget_io.o(i._sys_read), (46 bytes).
    Removing retarget_io.o(.data), (4 bytes).
    Removing stm32f4xx_hal.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DBGMCU_DisableDBGSleepMode), (20 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DBGMCU_DisableDBGStandbyMode), (20 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DBGMCU_DisableDBGStopMode), (20 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DBGMCU_EnableDBGSleepMode), (20 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DBGMCU_EnableDBGStandbyMode), (20 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DBGMCU_EnableDBGStopMode), (20 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DeInit), (68 bytes).
    Removing stm32f4xx_hal.o(i.HAL_Delay), (40 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DisableCompensationCell), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_DisableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_EnableCompensationCell), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_EnableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetDEVID), (16 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetTick), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetTickFreq), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetTickPrio), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetUIDw0), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetUIDw1), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_GetUIDw2), (12 bytes).
    Removing stm32f4xx_hal.o(i.HAL_IncTick), (24 bytes).
    Removing stm32f4xx_hal.o(i.HAL_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal.o(i.HAL_ResumeTick), (18 bytes).
    Removing stm32f4xx_hal.o(i.HAL_SetTickFreq), (48 bytes).
    Removing stm32f4xx_hal.o(i.HAL_SuspendTick), (18 bytes).
    Removing stm32f4xx_hal_cortex.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_MPU_ConfigRegion), (92 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_MPU_Disable), (32 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_MPU_Enable), (40 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_ClearPendingIRQ), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ), (40 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_GetActive), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_GetPendingIRQ), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_GetPriority), (148 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPendingIRQ), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_NVIC_SystemReset), (44 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig), (40 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_dma.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_dma.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_dma.o(i.DMA_CalcBaseAndBitshift), (52 bytes).
    Removing stm32f4xx_hal_dma.o(i.DMA_CheckFifoParam), (170 bytes).
    Removing stm32f4xx_hal_dma.o(i.DMA_SetConfig), (44 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_Abort), (172 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_DeInit), (112 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_GetError), (6 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_GetState), (8 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_IRQHandler), (576 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_Init), (236 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_PollForTransfer), (346 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_RegisterCallback), (96 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_Start), (102 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT), (146 bytes).
    Removing stm32f4xx_hal_dma.o(i.HAL_DMA_UnRegisterCallback), (124 bytes).
    Removing stm32f4xx_hal_dma.o(.constdata), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_dma_ex.o(i.DMA_MultiBufferSetConfig), (32 bytes).
    Removing stm32f4xx_hal_dma_ex.o(i.HAL_DMAEx_ChangeMemory), (18 bytes).
    Removing stm32f4xx_hal_dma_ex.o(i.HAL_DMAEx_MultiBufferStart), (124 bytes).
    Removing stm32f4xx_hal_dma_ex.o(i.HAL_DMAEx_MultiBufferStart_IT), (4056 bytes).
    Removing stm32f4xx_hal_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_gpio.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_Callback), (2 bytes).
    Removing stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler), (28 bytes).
    Removing stm32f4xx_hal_gpio.o(i.HAL_GPIO_LockPin), (46 bytes).
    Removing stm32f4xx_hal_gpio.o(i.HAL_GPIO_TogglePin), (20 bytes).
    Removing stm32f4xx_hal_pwr.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_pwr.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_pwr.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_ConfigPVD), (180 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_DeInit), (28 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_DisableBkUpAccess), (28 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_DisableSEVOnPend), (20 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_DisableSleepOnExit), (20 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_DisableWakeUpPin), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess), (28 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnableSEVOnPend), (20 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnableSleepOnExit), (20 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnableWakeUpPin), (16 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnterSLEEPMode), (32 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnterSTANDBYMode), (40 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_EnterSTOPMode), (64 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f4xx_hal_pwr.o(i.HAL_PWR_PVD_IRQHandler), (32 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_ControlVoltageScaling), (228 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_DisableBkUpReg), (60 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_DisableOverDrive), (140 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableBkUpReg), (60 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableOverDrive), (140 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnterUnderDriveSTOPMode), (128 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f4xx_hal_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_DeInit), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_GetClockConfig), (68 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_GetOscConfig), (244 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq), (32 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_MCOConfig), (192 bytes).
    Removing stm32f4xx_hal_rcc.o(i.HAL_RCC_NMI_IRQHandler), (32 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_DisablePLLI2S), (56 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_DisablePLLSAI), (56 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_EnablePLLI2S), (120 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_EnablePLLSAI), (120 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPeriphCLKConfig), (164 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_GetPeriphCLKFreq), (144 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig), (772 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(i.HAL_RCC_DeInit), (452 bytes).
    Removing stm32f4xx_hal_spi.o(.rev16_text), (4 bytes).
    Removing stm32f4xx_hal_spi.o(.revsh_text), (4 bytes).
    Removing stm32f4xx_hal_spi.o(.rrx_text), (6 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Abort), (368 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_AbortCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Abort_IT), (384 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_DMAPause), (50 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_DMAResume), (50 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_DMAStop), (72 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_DeInit), (54 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_ErrorCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_GetError), (6 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_GetState), (8 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_IRQHandler), (348 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Init), (222 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_MspInit), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Receive), (546 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_DMA), (320 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Receive_IT), (252 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_RxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_RxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit), (486 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive), (722 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_DMA), (400 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_TransmitReceive_IT), (240 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_DMA), (288 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_Transmit_IT), (216 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_TxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_TxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_TxRxCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.HAL_SPI_TxRxHalfCpltCallback), (2 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_16BIT), (72 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_16BITCRC), (36 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_8BIT), (72 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_2linesRxISR_8BITCRC), (46 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_2linesTxISR_16BIT), (88 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_2linesTxISR_8BIT), (88 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_AbortRx_ISR), (112 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_AbortTx_ISR), (32 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_CloseRxTx_ISR), (228 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_CloseRx_ISR), (128 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_CloseTx_ISR), (160 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMAAbortOnError), (20 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMAError), (40 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMAHalfReceiveCplt), (14 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMAHalfTransmitCplt), (14 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMAHalfTransmitReceiveCplt), (14 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMAReceiveCplt), (196 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMARxAbortCallback), (144 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMATransmitCplt), (128 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMATransmitReceiveCplt), (176 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_DMATxAbortCallback), (172 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_EndRxTransaction), (148 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_EndRxTxTransaction), (108 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_RxISR_16BIT), (84 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_RxISR_16BITCRC), (36 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_RxISR_8BIT), (84 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_RxISR_8BITCRC), (30 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_TxISR_16BIT), (56 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_TxISR_8BIT), (56 bytes).
    Removing stm32f4xx_hal_spi.o(i.SPI_WaitFlagStateUntilTimeout), (216 bytes).
    Removing system_stm32f4xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f4xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f4xx.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (168 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (112 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (312 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

565 unused section(s) (total 28444 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_stdio.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_mt.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2mt.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  noretval__2printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file_locked.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_c.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  streamlock.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fseek.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio_streams.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ftell.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flsbuf.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  flsbuf_fwide.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\ARM_Compiler\1.7.2\Source\EventRecorder.c 0x00000000   Number         0  eventrecorder.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\ARM_Compiler\1.7.2\Source\retarget_io.c 0x00000000   Number         0  retarget_io.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\CMSIS\Driver\SPI_STM32F4xx.c 0x00000000   Number         0  spi_stm32f4xx.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal.c 0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_cortex.c 0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_dma.c 0x00000000   Number         0  stm32f4xx_hal_dma.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_dma_ex.c 0x00000000   Number         0  stm32f4xx_hal_dma_ex.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_gpio.c 0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_pwr.c 0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_pwr_ex.c 0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_rcc.c 0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_rcc_ex.c 0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    C:\Users\Luis\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\STM32F4xx_HAL_Driver\Src\stm32f4xx_hal_spi.c 0x00000000   Number         0  stm32f4xx_hal_spi.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.8.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\ARM_Compiler\\1.7.2\\Source\\EventRecorder.c 0x00000000   Number         0  eventrecorder.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\CMSIS\\Driver\\SPI_STM32F4xx.c 0x00000000   Number         0  spi_stm32f4xx.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal.c 0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_cortex.c 0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_dma.c 0x00000000   Number         0  stm32f4xx_hal_dma.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_dma_ex.c 0x00000000   Number         0  stm32f4xx_hal_dma_ex.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_gpio.c 0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_pwr.c 0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_pwr_ex.c 0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_rcc.c 0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_rcc_ex.c 0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    C:\\Users\\Luis\\AppData\\Local\\Arm\\Packs\\Keil\\STM32F4xx_DFP\\2.17.1\\Drivers\\STM32F4xx_HAL_Driver\\Src\\stm32f4xx_hal_spi.c 0x00000000   Number         0  stm32f4xx_hal_spi.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F429ZITx\startup_stm32f429xx.s 0x00000000   Number         0  startup_stm32f429xx.o ABSOLUTE
    RTE\Device\STM32F429ZITx\system_stm32f4xx.c 0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F429ZITx\\system_stm32f4xx.c 0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    keypad.c                                 0x00000000   Number         0  keypad.o ABSOLUTE
    keypad.c                                 0x00000000   Number         0  keypad.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      428  startup_stm32f429xx.o(RESET)
    !!!main                                  0x080001ac   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001b4   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x080001e8   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x08000224   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$_printf_percent$$00000000  0x08000240   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000013  0x08000240   Section        6  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    .ARM.Collect$$_printf_percent$$00000017  0x08000246   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libinit$$00000000          0x0800024a   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800024c   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000250   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000005          0x08000250   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000005)
    .ARM.Collect$$libinit$$0000000A          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000258   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000024          0x08000258   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000024)
    .ARM.Collect$$libinit$$00000025          0x0800025c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800025c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800025c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800025c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800025c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800025c   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0800025e   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000260   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000260   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000005      0x08000260   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$00000005)
    .ARM.Collect$$libshutdown$$00000006      0x08000264   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    .ARM.Collect$$libshutdown$$00000009      0x08000264   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    .ARM.Collect$$libshutdown$$0000000C      0x08000264   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000E      0x08000264   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    .ARM.Collect$$libshutdown$$0000000F      0x08000264   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000011      0x08000268   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    .ARM.Collect$$libshutdown$$00000012      0x08000268   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    .ARM.Collect$$rtentry$$00000000          0x0800026a   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800026a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800026a   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000270   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000278   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800027c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800027c   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000284   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000286   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000286   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800028a   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000290   Section        0  maybetermalloc2.o(.emb_text)
    .text                                    0x08000290   Section       64  startup_stm32f429xx.o(.text)
    $v0                                      0x08000290   Number         0  startup_stm32f429xx.o(.text)
    [Anonymous Symbol]                       0x080002d0   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x080002f8   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x08000308   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x0800031a   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x08000330   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x0800034c   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x0800034e   Number         0  irq_armv7m.o(.text)
    .text                                    0x08000398   Section      238  lludivv7m.o(.text)
    .text                                    0x08000488   Section        0  noretval__2printf.o(.text)
    .text                                    0x080004a0   Section        0  __printf.o(.text)
    .text                                    0x08000508   Section        0  _printf_str.o(.text)
    .text                                    0x0800055a   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080005e4   Section       68  rt_memclr.o(.text)
    .text                                    0x08000628   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000678   Section      128  strcmpv7m.o(.text)
    .text                                    0x080006f8   Section        0  heapauxi.o(.text)
    .text                                    0x080006fe   Section        0  _printf_char.o(.text)
    .text                                    0x0800072a   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000790   Section        0  _printf_char_common.o(.text)
    _printf_input_char                       0x08000791   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x080007c0   Section        0  initio_locked.o(.text)
    .text                                    0x08000988   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080009d2   Section        0  h1_free_mt.o(.text)
    .text                                    0x08000a48   Section        0  flsbuf.o(.text)
    .text                                    0x08000c1e   Section        0  fclose.o(.text)
    .text                                    0x08000c6a   Section        0  setvbuf_locked.o(.text)
    .text                                    0x08000cd4   Section        0  fopen_locked.o(.text)
    _freopen_locked                          0x08000cd5   Thumb Code   174  fopen_locked.o(.text)
    .text                                    0x08000e18   Section        0  exit.o(.text)
    .text                                    0x08000e2a   Section        0  defsig_rtred_outer.o(.text)
    .text                                    0x08000e38   Section        8  libspace.o(.text)
    .text                                    0x08000e40   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x08000e4a   Section        0  hguard.o(.text)
    .text                                    0x08000e4e   Section        0  init_alloc.o(.text)
    .text                                    0x08000ed8   Section        0  h1_alloc_mt.o(.text)
    Heap1_SizeAdjust                         0x08000ed9   Thumb Code     8  h1_alloc_mt.o(.text)
    .text                                    0x08000f78   Section        0  _printf_char_file_locked.o(.text)
    .text                                    0x08000fb8   Section        0  fseek.o(.text)
    .text                                    0x080010b0   Section        0  stdio.o(.text)
    .text                                    0x080011a0   Section        0  defsig_exit.o(.text)
    .text                                    0x080011ac   Section        0  defsig_rtred_inner.o(.text)
    .text                                    0x080011e0   Section        0  sys_exit.o(.text)
    .text                                    0x080011ec   Section        0  h1_init_mt.o(.text)
    .text                                    0x080011fe   Section        0  h1_extend_mt.o(.text)
    .text                                    0x0800123c   Section        0  ftell.o(.text)
    .text                                    0x0800127e   Section        0  defsig_general.o(.text)
    .text                                    0x080012b0   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x080012be   Section        0  sys_wrch.o(.text)
    .text                                    0x080012cc   Section        2  use_no_semi.o(.text)
    .text                                    0x080012ce   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x080012ce   Section        0  indicate_semi.o(.text)
    .text                                    0x080012d2   Section        0  term_alloc.o(.text)
    .text                                    0x080012e4   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x08001334   Section        0  h1_final_mt.o(.text)
    [Anonymous Symbol]                       0x0800133e   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x0800133f   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x0800137e   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x0800137f   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x080013d6   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x080013d7   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x080013f4   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __arm_cp.3_0                             0x080013fc   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x08001400   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x08001420   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x08001424   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x08001428   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x0800142c   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08001434   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x08001464   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x08001468   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x0800146c   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x08001470   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08001474   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08001475   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08001480   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08001481   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08001486   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08001487   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08001492   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x08001493   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08001498   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x08001499   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x080014fc   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x080014fd   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    __arm_cp.9_0                             0x08001540   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08001544   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x08001564   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08001568   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x08001590   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x08001594   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08001598   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_0                            0x080015b8   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.13_1                            0x080015bc   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x080015c0   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x080015e8   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x080015ec   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x0800160c   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08001610   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x0800167c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08001680   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.2_0                             0x080016a0   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x080016a4   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x08001720   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08001724   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x08001744   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08001748   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x08001768   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x0800176c   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x0800178c   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08001790   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x080017b0   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x080017b4   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x080017b8   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x080017ba   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08001826   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08001868   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x0800189e   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x080018d8   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08001922   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x0800195a   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x0800195b   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08001a04   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x08001a24   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_1                             0x08001a28   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x08001a2c   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08001a74   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x08001ab8   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x08001b40   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08001b44   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x08001bb0   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x08001bb4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08001bb8   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x08001bb9   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x08001bec   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x08001bf0   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x08001bf1   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x08001c6c   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x08001c70   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x08001c71   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x08001cac   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x08001cb0   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x08001cf8   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08001cfc   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    osRtxThreadDestroy                       0x08001cfd   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    __arm_cp.56_0                            0x08001d1c   Number         4  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x08001d20   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x08001d70   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08001d74   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x08001d75   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x08001dc8   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x08001dcc   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadJoinWakeup                    0x08001dcd   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x08001dea   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08001dfc   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08001e28   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08001e3c   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    osRtxThreadListRoot                      0x08001e3d   Thumb Code    12  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x08001e48   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08001e6e   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x08001e6f   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08001e98   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x08001ea8   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08001eac   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08001ec0   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x08001ef0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x08001ef4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x08001ef8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x08001efc   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x08001f08   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08001f0c   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x08001f44   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08001f48   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001f78   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x08001fec   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08001ff0   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x08002008   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x0800200c   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x08002010   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x08002030   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x08002031   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x0800209c   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080020a0   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.31_0                            0x080020a8   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x080020ac   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_0                            0x080020cc   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.19_1                            0x080020d0   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x080020d4   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x080020f4   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x080020f8   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.26_0                            0x08002118   Number         4  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x0800211c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x0800211d   Thumb Code    22  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08002134   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetState                     0x08002135   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x0800213c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08002140   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelGetTickCount                 0x08002141   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.14_0                            0x08002148   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x0800214c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x0800214d   Thumb Code   244  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x08002240   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_1                            0x08002244   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x08002248   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x0800224c   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x0800224d   Thumb Code   120  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_0                            0x080022c4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x080022c8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x080022cc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x080022d0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x080022d4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x080022d5   Thumb Code   212  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x080023a8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x080023ac   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x080023ad   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x080024bc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x080024c0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x080024c4   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x080024c5   Thumb Code   176  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.20_0                            0x08002574   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08002578   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x08002579   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x08002604   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08002608   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexDelete                        0x08002609   Thumb Code   172  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x080026b4   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x080026b8   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexNew                           0x080026b9   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x0800271c   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08002720   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x08002721   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x080027d0   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x080027d4   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x080027d5   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x0800281c   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08002820   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadGetId                        0x08002821   Thumb Code     8  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.20_0                            0x08002828   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x0800282c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x0800282d   Thumb Code   472  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x08002a04   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x08002a08   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x08002a0c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x08002a10   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x08002a14   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08002a18   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxThreadYield                        0x08002a19   Thumb Code    52  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.47_0                            0x08002a4c   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    i.Disable_SPI_Clock                      0x08002a50   Section        0  spi_stm32f4xx.o(i.Disable_SPI_Clock)
    Disable_SPI_Clock                        0x08002a51   Thumb Code   128  spi_stm32f4xx.o(i.Disable_SPI_Clock)
    i.Enable_GPIO_Clock                      0x08002aec   Section        0  spi_stm32f4xx.o(i.Enable_GPIO_Clock)
    Enable_GPIO_Clock                        0x08002aed   Thumb Code   422  spi_stm32f4xx.o(i.Enable_GPIO_Clock)
    i.Enable_SPI_Clock                       0x08002cc4   Section        0  spi_stm32f4xx.o(i.Enable_SPI_Clock)
    Enable_SPI_Clock                         0x08002cc5   Thumb Code   240  spi_stm32f4xx.o(i.Enable_SPI_Clock)
    i.Error_Handler                          0x08002dd0   Section        0  main.o(i.Error_Handler)
    Error_Handler                            0x08002dd1   Thumb Code     4  main.o(i.Error_Handler)
    i.GPIO_Init                              0x08002dd4   Section        0  keypad.o(i.GPIO_Init)
    GPIO_Init                                0x08002dd5   Thumb Code    78  keypad.o(i.GPIO_Init)
    i.HAL_DMA_Abort_IT                       0x08002e30   Section        0  stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT)
    i.HAL_GPIO_DeInit                        0x08002e58   Section        0  stm32f4xx_hal_gpio.o(i.HAL_GPIO_DeInit)
    i.HAL_GPIO_Init                          0x08002fdc   Section        0  stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init)
    i.HAL_GPIO_ReadPin                       0x080031ec   Section        0  stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin)
    i.HAL_GPIO_WritePin                      0x080031fc   Section        0  stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin)
    i.HAL_GetREVID                           0x08003208   Section        0  stm32f4xx_hal.o(i.HAL_GetREVID)
    i.HAL_GetTick                            0x08003214   Section        0  main.o(i.HAL_GetTick)
    i.HAL_Init                               0x08003264   Section        0  stm32f4xx_hal.o(i.HAL_Init)
    i.HAL_InitTick                           0x08003294   Section        0  stm32f4xx_hal.o(i.HAL_InitTick)
    i.HAL_MspInit                            0x080032e0   Section        0  stm32f4xx_hal.o(i.HAL_MspInit)
    i.HAL_NVIC_DisableIRQ                    0x080032e4   Section        0  stm32f4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ)
    i.HAL_NVIC_SetPriority                   0x08003310   Section        0  stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority)
    i.HAL_NVIC_SetPriorityGrouping           0x0800338c   Section        0  stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping)
    i.HAL_RCC_ClockConfig                    0x080033b4   Section        0  stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig)
    i.HAL_RCC_GetHCLKFreq                    0x08003538   Section        0  stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq)
    i.HAL_RCC_GetPCLK2Freq                   0x08003544   Section        0  stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq)
    i.HAL_RCC_GetSysClockFreq                0x08003564   Section        0  stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq)
    i.HAL_RCC_OscConfig                      0x08003614   Section        0  stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig)
    i.HAL_SYSTICK_Config                     0x08003ab0   Section        0  stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config)
    i.ITM_SendChar                           0x08003ae4   Section        0  retarget_io.o(i.ITM_SendChar)
    i.Init_MsgQueue_keypad                   0x08003b14   Section        0  keypad.o(i.Init_MsgQueue_keypad)
    Init_MsgQueue_keypad                     0x08003b15   Thumb Code    32  keypad.o(i.Init_MsgQueue_keypad)
    i.SPI1_Control                           0x08003b38   Section        0  spi_stm32f4xx.o(i.SPI1_Control)
    SPI1_Control                             0x08003b39   Thumb Code    18  spi_stm32f4xx.o(i.SPI1_Control)
    i.SPI1_GetDataCount                      0x08003b50   Section        0  spi_stm32f4xx.o(i.SPI1_GetDataCount)
    SPI1_GetDataCount                        0x08003b51   Thumb Code    10  spi_stm32f4xx.o(i.SPI1_GetDataCount)
    i.SPI1_GetStatus                         0x08003b60   Section        0  spi_stm32f4xx.o(i.SPI1_GetStatus)
    SPI1_GetStatus                           0x08003b61   Thumb Code    12  spi_stm32f4xx.o(i.SPI1_GetStatus)
    i.SPI1_IRQHandler                        0x08003b70   Section        0  spi_stm32f4xx.o(i.SPI1_IRQHandler)
    i.SPI1_Initialize                        0x08003b80   Section        0  spi_stm32f4xx.o(i.SPI1_Initialize)
    SPI1_Initialize                          0x08003b81   Thumb Code    14  spi_stm32f4xx.o(i.SPI1_Initialize)
    i.SPI1_PowerControl                      0x08003b94   Section        0  spi_stm32f4xx.o(i.SPI1_PowerControl)
    SPI1_PowerControl                        0x08003b95   Thumb Code    14  spi_stm32f4xx.o(i.SPI1_PowerControl)
    i.SPI1_Receive                           0x08003ba8   Section        0  spi_stm32f4xx.o(i.SPI1_Receive)
    SPI1_Receive                             0x08003ba9   Thumb Code    18  spi_stm32f4xx.o(i.SPI1_Receive)
    i.SPI1_Send                              0x08003bc0   Section        0  spi_stm32f4xx.o(i.SPI1_Send)
    SPI1_Send                                0x08003bc1   Thumb Code    18  spi_stm32f4xx.o(i.SPI1_Send)
    i.SPI1_Transfer                          0x08003bd8   Section        0  spi_stm32f4xx.o(i.SPI1_Transfer)
    SPI1_Transfer                            0x08003bd9   Thumb Code    22  spi_stm32f4xx.o(i.SPI1_Transfer)
    i.SPI1_Uninitialize                      0x08003bf4   Section        0  spi_stm32f4xx.o(i.SPI1_Uninitialize)
    SPI1_Uninitialize                        0x08003bf5   Thumb Code    10  spi_stm32f4xx.o(i.SPI1_Uninitialize)
    i.SPIX_GetCapabilities                   0x08003c04   Section        0  spi_stm32f4xx.o(i.SPIX_GetCapabilities)
    SPIX_GetCapabilities                     0x08003c05   Thumb Code     6  spi_stm32f4xx.o(i.SPIX_GetCapabilities)
    i.SPIX_GetVersion                        0x08003c10   Section        0  spi_stm32f4xx.o(i.SPIX_GetVersion)
    SPIX_GetVersion                          0x08003c11   Thumb Code    10  spi_stm32f4xx.o(i.SPIX_GetVersion)
    i.SPI_Control                            0x08003c20   Section        0  spi_stm32f4xx.o(i.SPI_Control)
    SPI_Control                              0x08003c21   Thumb Code  1502  spi_stm32f4xx.o(i.SPI_Control)
    i.SPI_GetDataCount                       0x080041fe   Section        0  spi_stm32f4xx.o(i.SPI_GetDataCount)
    SPI_GetDataCount                         0x080041ff   Thumb Code     8  spi_stm32f4xx.o(i.SPI_GetDataCount)
    i.SPI_GetStatus                          0x08004206   Section        0  spi_stm32f4xx.o(i.SPI_GetStatus)
    SPI_GetStatus                            0x08004207   Thumb Code    44  spi_stm32f4xx.o(i.SPI_GetStatus)
    i.SPI_IRQHandler                         0x08004232   Section        0  spi_stm32f4xx.o(i.SPI_IRQHandler)
    SPI_IRQHandler                           0x08004233   Thumb Code   274  spi_stm32f4xx.o(i.SPI_IRQHandler)
    i.SPI_Initialize                         0x08004344   Section        0  spi_stm32f4xx.o(i.SPI_Initialize)
    SPI_Initialize                           0x08004345   Thumb Code   212  spi_stm32f4xx.o(i.SPI_Initialize)
    i.SPI_PeripheralReset                    0x08004418   Section        0  spi_stm32f4xx.o(i.SPI_PeripheralReset)
    SPI_PeripheralReset                      0x08004419   Thumb Code   262  spi_stm32f4xx.o(i.SPI_PeripheralReset)
    i.SPI_PowerControl                       0x0800453c   Section        0  spi_stm32f4xx.o(i.SPI_PowerControl)
    SPI_PowerControl                         0x0800453d   Thumb Code   264  spi_stm32f4xx.o(i.SPI_PowerControl)
    i.SPI_Receive                            0x08004648   Section        0  spi_stm32f4xx.o(i.SPI_Receive)
    SPI_Receive                              0x08004649   Thumb Code   148  spi_stm32f4xx.o(i.SPI_Receive)
    i.SPI_RxData                             0x080046dc   Section        0  spi_stm32f4xx.o(i.SPI_RxData)
    SPI_RxData                               0x080046dd   Thumb Code    88  spi_stm32f4xx.o(i.SPI_RxData)
    i.SPI_Send                               0x08004734   Section        0  spi_stm32f4xx.o(i.SPI_Send)
    SPI_Send                                 0x08004735   Thumb Code   148  spi_stm32f4xx.o(i.SPI_Send)
    i.SPI_Transfer                           0x080047c8   Section        0  spi_stm32f4xx.o(i.SPI_Transfer)
    SPI_Transfer                             0x080047c9   Thumb Code   130  spi_stm32f4xx.o(i.SPI_Transfer)
    i.SPI_TxData                             0x0800484a   Section        0  spi_stm32f4xx.o(i.SPI_TxData)
    SPI_TxData                               0x0800484b   Thumb Code    84  spi_stm32f4xx.o(i.SPI_TxData)
    i.SPI_Uninitialize                       0x0800489e   Section        0  spi_stm32f4xx.o(i.SPI_Uninitialize)
    SPI_Uninitialize                         0x0800489f   Thumb Code   102  spi_stm32f4xx.o(i.SPI_Uninitialize)
    i.SystemClock_Config                     0x08004904   Section        0  main.o(i.SystemClock_Config)
    SystemClock_Config                       0x08004905   Thumb Code   178  main.o(i.SystemClock_Config)
    i.SystemCoreClockUpdate                  0x080049c4   Section        0  system_stm32f4xx.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x08004a84   Section        0  system_stm32f4xx.o(i.SystemInit)
    i.Th_keypad                              0x08004aa0   Section        0  keypad.o(i.Th_keypad)
    Th_keypad                                0x08004aa1   Thumb Code    32  keypad.o(i.Th_keypad)
    i.__NVIC_GetPriorityGrouping             0x08004ad0   Section        0  stm32f4xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping)
    __NVIC_GetPriorityGrouping               0x08004ad1   Thumb Code    10  stm32f4xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping)
    i.__NVIC_SetPriority                     0x08004ae0   Section        0  stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x08004ae1   Thumb Code    32  stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority)
    i.__user_perthread_libspace              0x08004b08   Section        0  rtx_lib.o(i.__user_perthread_libspace)
    i._mutex_acquire                         0x08004b60   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x08004b61   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x08004b76   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x08004b77   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x08004b82   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x08004b83   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x08004ba4   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x08004ba5   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x08004bb6   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i._sys_close                             0x08004bbe   Section        0  retarget_io.o(i._sys_close)
    i._sys_flen                              0x08004be4   Section        0  retarget_io.o(i._sys_flen)
    i._sys_istty                             0x08004c08   Section        0  retarget_io.o(i._sys_istty)
    i._sys_open                              0x08004c2c   Section        0  retarget_io.o(i._sys_open)
    i._sys_seek                              0x08004c94   Section        0  retarget_io.o(i._sys_seek)
    i._sys_write                             0x08004cc0   Section        0  retarget_io.o(i._sys_write)
    i.fputc                                  0x08004d06   Section        0  fputc.o(i.fputc)
    i.init_Th_keypad                         0x08004d20   Section        0  keypad.o(i.init_Th_keypad)
    i.main                                   0x08004d4c   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x08004d68   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x08004d88   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x08004d8c   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x08004d8d   Thumb Code    28  rtx_lib.o(i.os_kernel_is_active)
    i.read_keypad                            0x08004dac   Section        0  keypad.o(i.read_keypad)
    read_keypad                              0x08004dad   Thumb Code   540  keypad.o(i.read_keypad)
    i.stdout_putchar                         0x08004fd0   Section        0  retarget_io.o(i.stdout_putchar)
    stdout_putchar                           0x08004fd1   Thumb Code    12  retarget_io.o(i.stdout_putchar)
    x$fpl$fpinit                             0x08004fdc   Section       10  fpinit.o(x$fpl$fpinit)
    $v0                                      0x08004fdc   Number         0  fpinit.o(x$fpl$fpinit)
    .constdata                               0x08004fe8   Section      104  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x08004fe8   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x0800500c   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08005030   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08005050   Section      144  spi_stm32f4xx.o(.constdata)
    DriverVersion                            0x08005050   Data           4  spi_stm32f4xx.o(.constdata)
    DriverCapabilities                       0x08005054   Data           4  spi_stm32f4xx.o(.constdata)
    SPI1_mosi                                0x08005058   Data          16  spi_stm32f4xx.o(.constdata)
    SPI1_miso                                0x08005068   Data          16  spi_stm32f4xx.o(.constdata)
    SPI1_sck                                 0x08005078   Data          16  spi_stm32f4xx.o(.constdata)
    SPI1_Resources                           0x08005088   Data          44  spi_stm32f4xx.o(.constdata)
    .constdata                               0x080050e0   Section       24  eventrecorder.o(.constdata)
    __tagsym$$used                           0x080050e0   Number         0  eventrecorder.o(.constdata)
    .constdata                               0x080050f8   Section       23  retarget_io.o(.constdata)
    .constdata                               0x0800510f   Section       24  system_stm32f4xx.o(.constdata)
    .rodata                                  0x08005128   Section      168  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08005128   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08005198   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x080051d4   Section        0  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section    32832  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data       32768  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20008000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.libspace                         0x20008040   Section      496  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20008040   Data         480  rtx_lib.o(.bss.os.libspace)
    os_libspace_id                           0x20008220   Data          16  rtx_lib.o(.bss.os.libspace)
    .bss.os.msgqueue.cb                      0x20008230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20008230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20008264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20008264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200082b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200082b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200082f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.idle.stack                0x20008340   Section      512  rtx_lib.o(.bss.os.thread.idle.stack)
    os_idle_thread_stack                     0x20008340   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    .bss.os.thread.timer.stack               0x20008540   Section      512  rtx_lib.o(.bss.os.thread.timer.stack)
    os_timer_thread_stack                    0x20008540   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    .data                                    0x20008740   Section        8  main.o(.data)
    id_Th_test                               0x20008740   Data           4  main.o(.data)
    ticks                                    0x20008744   Data           4  main.o(.data)
    .data                                    0x20008748   Section        9  keypad.o(.data)
    id_Th_keypad                             0x20008748   Data           4  keypad.o(.data)
    id_MsgQueue_keypad                       0x2000874c   Data           4  keypad.o(.data)
    key                                      0x20008750   Data           1  keypad.o(.data)
    .data                                    0x20008751   Section        1  rtx_lib.o(.data)
    os_kernel_active                         0x20008751   Data           1  rtx_lib.o(.data)
    .data                                    0x20008754   Section        9  stm32f4xx_hal.o(.data)
    .data                                    0x20008760   Section        4  system_stm32f4xx.o(.data)
    .data                                    0x20008764   Section        4  stdio_streams.o(.data)
    .data                                    0x20008768   Section        4  stdio_streams.o(.data)
    .data                                    0x2000876c   Section        4  stdio_streams.o(.data)
    .data                                    0x20008770   Section        4  streamlock.o(.data)
    .bss                                     0x20008818   Section       20  keypad.o(.bss)
    GPIO_InitStruct                          0x20008818   Data          20  keypad.o(.bss)
    .bss                                     0x2000882c   Section       44  spi_stm32f4xx.o(.bss)
    SPI1_Info                                0x2000882c   Data          16  spi_stm32f4xx.o(.bss)
    SPI1_TransferInfo                        0x2000883c   Data          28  spi_stm32f4xx.o(.bss)
    .bss                                     0x20008858   Section       84  stdio_streams.o(.bss)
    .bss                                     0x200088ac   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20008900   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20008954   Section       96  libspace.o(.bss)
    .bss.noinit                              0x200089c0   Section     4260  eventrecorder.o(.bss.noinit)
    EventBuffer                              0x200089c0   Data        4096  eventrecorder.o(.bss.noinit)
    EventFilter                              0x200099c0   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20009a40   Data          36  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20009a64   Section        0  os_systick.o(.bss.os)
    PendST                                   0x20009a64   Data           1  os_systick.o(.bss.os)
    HEAP                                     0x20009a68   Section      512  startup_stm32f429xx.o(HEAP)
    Heap_Mem                                 0x20009a68   Data         512  startup_stm32f429xx.o(HEAP)
    STACK                                    0x20009c68   Section     1024  startup_stm32f429xx.o(STACK)
    Stack_Mem                                0x20009c68   Data        1024  startup_stm32f429xx.o(STACK)
    __initial_sp                             0x2000a068   Data           0  startup_stm32f429xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_fini_                               - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_post_padding                      - Undefined Weak Reference
    _printf_pre_padding                       - Undefined Weak Reference
    _printf_truncate_signed                   - Undefined Weak Reference
    _printf_truncate_unsigned                 - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    __Vectors_Size                           0x000001ac   Number         0  startup_stm32f429xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f429xx.o(RESET)
    __Vectors_End                            0x080001ac   Data           0  startup_stm32f429xx.o(RESET)
    __main                                   0x080001ad   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001b5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001b5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001b5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001c3   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x080001e9   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x080001e9   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x08000225   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    _printf_c                                0x08000241   Thumb Code     0  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    _printf_percent                          0x08000241   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_percent_end                      0x08000247   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_init                            0x0800024b   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800024d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_2                     0x08000251   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000005)
    __rt_lib_init_preinit_1                  0x08000251   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_atexit_1                   0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_fp_trap_1                  0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_rand_1                     0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_signal_1                   0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_2                    0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000024)
    __rt_lib_init_user_alloc_1               0x08000259   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_alloca_1                   0x0800025d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800025d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_cpp_1                      0x0800025d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800025d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_return                     0x0800025d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_stdio_1                    0x0800025d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x0800025f   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000261   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_fini_1                 0x08000261   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_stdio_2                0x08000261   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000005)
    __rt_lib_shutdown_fp_trap_1              0x08000265   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000009)
    __rt_lib_shutdown_heap_2                 0x08000265   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_signal_1               0x08000265   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_stdio_1                0x08000265   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000006)
    __rt_lib_shutdown_user_alloc_1           0x08000265   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E)
    __rt_lib_shutdown_heap_1                 0x08000269   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000011)
    __rt_lib_shutdown_return                 0x08000269   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000012)
    __rt_entry                               0x0800026b   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800026b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800026b   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000271   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000279   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800027d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800027d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000285   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000287   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000287   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800028b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000291   Thumb Code     8  startup_stm32f429xx.o(.text)
    _maybe_terminate_alloc                   0x08000291   Thumb Code     0  maybetermalloc2.o(.emb_text)
    NMI_Handler                              0x08000299   Thumb Code     2  startup_stm32f429xx.o(.text)
    HardFault_Handler                        0x0800029b   Thumb Code     2  startup_stm32f429xx.o(.text)
    MemManage_Handler                        0x0800029d   Thumb Code     2  startup_stm32f429xx.o(.text)
    BusFault_Handler                         0x0800029f   Thumb Code     2  startup_stm32f429xx.o(.text)
    UsageFault_Handler                       0x080002a1   Thumb Code     2  startup_stm32f429xx.o(.text)
    DebugMon_Handler                         0x080002a5   Thumb Code     2  startup_stm32f429xx.o(.text)
    ADC_IRQHandler                           0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_TX_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX0_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX1_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_TX_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DCMI_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2D_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_IRQHandler                           0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_WKUP_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI0_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI15_10_IRQHandler                     0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI1_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI2_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI3_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI4_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI9_5_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    FLASH_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    FMC_IRQHandler                           0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    FPU_IRQHandler                           0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    HASH_RNG_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C1_ER_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C1_EV_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_ER_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_EV_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_ER_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_EV_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_ER_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_IRQHandler                        0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_IRQHandler                        0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    PVD_IRQHandler                           0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    RCC_IRQHandler                           0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    SAI1_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    SDIO_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI2_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI3_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI4_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI5_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI6_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_CC_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM2_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM3_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM4_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM5_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM7_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_CC_IRQHandler                       0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART4_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART5_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART7_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART8_IRQHandler                         0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART1_IRQHandler                        0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART2_IRQHandler                        0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART3_IRQHandler                        0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART6_IRQHandler                        0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    WWDG_IRQHandler                          0x080002ab   Thumb Code     0  startup_stm32f429xx.o(.text)
    __user_initial_stackheap                 0x080002ad   Thumb Code     0  startup_stm32f429xx.o(.text)
    SVC_Handler                              0x080002d1   Thumb Code   154  irq_armv7m.o(.text)
    PendSV_Handler                           0x0800036b   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x0800037b   Thumb Code    16  irq_armv7m.o(.text)
    __aeabi_uldivmod                         0x08000399   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x08000399   Thumb Code   238  lludivv7m.o(.text)
    __2printf                                0x08000489   Thumb Code    20  noretval__2printf.o(.text)
    __printf                                 0x080004a1   Thumb Code   104  __printf.o(.text)
    _printf_str                              0x08000509   Thumb Code    82  _printf_str.o(.text)
    __aeabi_memcpy                           0x0800055b   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800055b   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080005c1   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x080005e5   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080005e5   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x080005e9   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000629   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000629   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000629   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x0800062d   Thumb Code     0  rt_memclr_w.o(.text)
    strcmp                                   0x08000679   Thumb Code   128  strcmpv7m.o(.text)
    __use_two_region_memory                  0x080006f9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x080006fb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x080006fd   Thumb Code     2  heapauxi.o(.text)
    _printf_cs_common                        0x080006ff   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x08000713   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x08000723   Thumb Code     8  _printf_char.o(.text)
    __aeabi_memcpy4                          0x0800072b   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0800072b   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0800072b   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000773   Thumb Code     0  rt_memcpy_w.o(.text)
    _printf_char_common                      0x0800079b   Thumb Code    32  _printf_char_common.o(.text)
    _initio                                  0x080007c1   Thumb Code   240  initio_locked.o(.text)
    _terminateio                             0x080008b1   Thumb Code   168  initio_locked.o(.text)
    __user_setup_stackheap                   0x08000989   Thumb Code    74  sys_stackheap_outer.o(.text)
    _free_internal                           0x080009d3   Thumb Code    98  h1_free_mt.o(.text)
    free                                     0x08000a35   Thumb Code    20  h1_free_mt.o(.text)
    __flsbuf                                 0x08000a49   Thumb Code   470  flsbuf.o(.text)
    __flsbuf_byte                            0x08000a49   Thumb Code     0  flsbuf.o(.text)
    __flsbuf_wide                            0x08000a49   Thumb Code     0  flsbuf.o(.text)
    _fclose_internal                         0x08000c1f   Thumb Code    76  fclose.o(.text)
    fclose                                   0x08000c1f   Thumb Code     0  fclose.o(.text)
    setvbuf                                  0x08000c6b   Thumb Code   104  setvbuf_locked.o(.text)
    freopen                                  0x08000d83   Thumb Code    42  fopen_locked.o(.text)
    _fopen$locked                            0x08000dad   Thumb Code   100  fopen_locked.o(.text)
    exit                                     0x08000e19   Thumb Code    18  exit.o(.text)
    __rt_SIGRTRED                            0x08000e2b   Thumb Code    14  defsig_rtred_outer.o(.text)
    __user_libspace                          0x08000e39   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000e39   Thumb Code     0  libspace.o(.text)
    __rt_heap_descriptor                     0x08000e41   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __use_no_heap                            0x08000e4b   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x08000e4d   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000e4f   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08000e51   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08000e53   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x08000e75   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x08000e7b   Thumb Code    94  init_alloc.o(.text)
    _malloc_internal                         0x08000ee1   Thumb Code   130  h1_alloc_mt.o(.text)
    malloc                                   0x08000f63   Thumb Code    20  h1_alloc_mt.o(.text)
    _printf_char_file                        0x08000f79   Thumb Code    58  _printf_char_file_locked.o(.text)
    _fseek                                   0x08000fb9   Thumb Code   242  fseek.o(.text)
    fseek                                    0x08000fb9   Thumb Code     0  fseek.o(.text)
    _seterr                                  0x080010b1   Thumb Code    20  stdio.o(.text)
    _writebuf                                0x080010c5   Thumb Code    84  stdio.o(.text)
    _fflush                                  0x08001119   Thumb Code    70  stdio.o(.text)
    _deferredlazyseek                        0x0800115f   Thumb Code    60  stdio.o(.text)
    __sig_exit                               0x080011a1   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTRED_inner                      0x080011ad   Thumb Code    14  defsig_rtred_inner.o(.text)
    _sys_exit                                0x080011e1   Thumb Code     8  sys_exit.o(.text)
    __Heap_Initialize                        0x080011ed   Thumb Code    14  h1_init_mt.o(.text)
    __Heap_DescSize                          0x080011fb   Thumb Code     4  h1_init_mt.o(.text)
    __Heap_ProvideMemory                     0x080011ff   Thumb Code    62  h1_extend_mt.o(.text)
    _ftell_internal                          0x0800123d   Thumb Code    66  ftell.o(.text)
    ftell                                    0x0800123d   Thumb Code     0  ftell.o(.text)
    __default_signal_display                 0x0800127f   Thumb Code    50  defsig_general.o(.text)
    __rt_SIGRTMEM                            0x080012b1   Thumb Code    14  defsig_rtmem_outer.o(.text)
    _ttywrch                                 0x080012bf   Thumb Code    14  sys_wrch.o(.text)
    __I$use$semihosting                      0x080012cd   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080012cd   Thumb Code     2  use_no_semi.o(.text)
    __aeabi_errno_addr                       0x080012cf   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x080012cf   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x080012cf   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __semihosting_library_function           0x080012cf   Thumb Code     0  indicate_semi.o(.text)
    _terminate_alloc                         0x080012d3   Thumb Code    16  term_alloc.o(.text)
    __rt_SIGRTMEM_inner                      0x080012e5   Thumb Code    22  defsig_rtmem_inner.o(.text)
    __Heap_Finalize                          0x08001335   Thumb Code    10  h1_final_mt.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x080013f5   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x08001401   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x0800142d   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08001435   Thumb Code    48  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x08001545   Thumb Code    32  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x08001569   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x08001599   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x080015c1   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x080015ed   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08001611   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x08001681   Thumb Code    32  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x080016a5   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08001725   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08001749   Thumb Code    32  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x0800176d   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08001791   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxKernelErrorNotify                   0x080017b5   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x080017b9   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x080017bb   Thumb Code   108  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08001827   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08001869   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0800189f   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x080018d9   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08001923   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x08001a05   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x08001a2d   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x08001a75   Thumb Code    66  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x08001ab9   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08001b45   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x08001cb1   Thumb Code    72  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08001d21   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08001deb   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08001dfd   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08001e29   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x08001e49   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x08001e99   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08001ead   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x08001ec1   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x08001efd   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08001f0d   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08001f49   Thumb Code    48  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001f79   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x08001ff1   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x08002011   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x080020a1   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x080020ad   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x080020d5   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x080020f9   Thumb Code    32  rtx_thread.o(.text.osThreadYield)
    HAL_DMA_Abort_IT                         0x08002e31   Thumb Code    40  stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT)
    HAL_GPIO_DeInit                          0x08002e59   Thumb Code   340  stm32f4xx_hal_gpio.o(i.HAL_GPIO_DeInit)
    HAL_GPIO_Init                            0x08002fdd   Thumb Code   474  stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init)
    HAL_GPIO_ReadPin                         0x080031ed   Thumb Code    16  stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin)
    HAL_GPIO_WritePin                        0x080031fd   Thumb Code    12  stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin)
    HAL_GetREVID                             0x08003209   Thumb Code     8  stm32f4xx_hal.o(i.HAL_GetREVID)
    HAL_GetTick                              0x08003215   Thumb Code    70  main.o(i.HAL_GetTick)
    HAL_Init                                 0x08003265   Thumb Code    44  stm32f4xx_hal.o(i.HAL_Init)
    HAL_InitTick                             0x08003295   Thumb Code    64  stm32f4xx_hal.o(i.HAL_InitTick)
    HAL_MspInit                              0x080032e1   Thumb Code     2  stm32f4xx_hal.o(i.HAL_MspInit)
    HAL_NVIC_DisableIRQ                      0x080032e5   Thumb Code    38  stm32f4xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ)
    HAL_NVIC_SetPriority                     0x08003311   Thumb Code   124  stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x0800338d   Thumb Code    32  stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping)
    HAL_RCC_ClockConfig                      0x080033b5   Thumb Code   368  stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig)
    HAL_RCC_GetHCLKFreq                      0x08003539   Thumb Code     6  stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq)
    HAL_RCC_GetPCLK2Freq                     0x08003545   Thumb Code    22  stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq)
    HAL_RCC_GetSysClockFreq                  0x08003565   Thumb Code   162  stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08003615   Thumb Code  1172  stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig)
    HAL_SYSTICK_Config                       0x08003ab1   Thumb Code    52  stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config)
    ITM_SendChar                             0x08003ae5   Thumb Code    42  retarget_io.o(i.ITM_SendChar)
    SPI1_IRQHandler                          0x08003b71   Thumb Code    10  spi_stm32f4xx.o(i.SPI1_IRQHandler)
    SystemCoreClockUpdate                    0x080049c5   Thumb Code   170  system_stm32f4xx.o(i.SystemCoreClockUpdate)
    SystemInit                               0x08004a85   Thumb Code    24  system_stm32f4xx.o(i.SystemInit)
    __user_perthread_libspace                0x08004b09   Thumb Code    80  rtx_lib.o(i.__user_perthread_libspace)
    _mutex_acquire                           0x08004b61   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x08004b77   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x08004b83   Thumb Code    34  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x08004ba5   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x08004bb7   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    _sys_close                               0x08004bbf   Thumb Code    38  retarget_io.o(i._sys_close)
    _sys_flen                                0x08004be5   Thumb Code    36  retarget_io.o(i._sys_flen)
    _sys_istty                               0x08004c09   Thumb Code    36  retarget_io.o(i._sys_istty)
    _sys_open                                0x08004c2d   Thumb Code    80  retarget_io.o(i._sys_open)
    _sys_seek                                0x08004c95   Thumb Code    44  retarget_io.o(i._sys_seek)
    _sys_write                               0x08004cc1   Thumb Code    70  retarget_io.o(i._sys_write)
    _fputc$unlocked                          0x08004d07   Thumb Code    26  fputc.o(i.fputc)
    init_Th_keypad                           0x08004d21   Thumb Code    34  keypad.o(i.init_Th_keypad)
    main                                     0x08004d4d   Thumb Code    28  main.o(i.main)
    osRtxErrorNotify                         0x08004d69   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x08004d89   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    _fp_init                                 0x08004fdd   Thumb Code    10  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08004fe5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08004fe5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    irqRtxLibRef                             0x08005048   Data           4  rtx_lib.o(.constdata)
    osRtxUserSVC                             0x0800504c   Data           4  rtx_lib.o(.constdata)
    Driver_SPI1                              0x080050b4   Data          44  spi_stm32f4xx.o(.constdata)
    EventRecorderInfo                        0x080050e0   Data          24  eventrecorder.o(.constdata)
    __stdin_name                             0x080050f8   Data           7  retarget_io.o(.constdata)
    __stdout_name                            0x080050ff   Data           8  retarget_io.o(.constdata)
    __stderr_name                            0x08005107   Data           8  retarget_io.o(.constdata)
    AHBPrescTable                            0x0800510f   Data          16  system_stm32f4xx.o(.constdata)
    APBPrescTable                            0x0800511f   Data           8  system_stm32f4xx.o(.constdata)
    osRtxConfig                              0x08005128   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x08005198   Data          56  rtx_lib.o(.rodata)
    irqRtxLib                                0x080051d0   Number         0  irq_armv7m.o(.rodata)
    Region$$Table$$Base                      0x080051e0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08005200   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x20008230   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20008264   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200082b4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x2000833c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    uwTick                                   0x20008754   Data           4  stm32f4xx_hal.o(.data)
    uwTickPrio                               0x20008758   Data           4  stm32f4xx_hal.o(.data)
    uwTickFreq                               0x2000875c   Data           1  stm32f4xx_hal.o(.data)
    SystemCoreClock                          0x20008760   Data           4  system_stm32f4xx.o(.data)
    __aeabi_stdin                            0x20008764   Data           4  stdio_streams.o(.data)
    __aeabi_stdout                           0x20008768   Data           4  stdio_streams.o(.data)
    __aeabi_stderr                           0x2000876c   Data           4  stdio_streams.o(.data)
    _stream_list_lock                        0x20008770   Data           4  streamlock.o(.data)
    osRtxInfo                                0x20008774   Data         164  rtx_kernel.o(.data.os)
    __stdin                                  0x20008858   Data          84  stdio_streams.o(.bss)
    __stdout                                 0x200088ac   Data          84  stdio_streams.o(.bss)
    __stderr                                 0x20008900   Data          84  stdio_streams.o(.bss)
    __libspace_start                         0x20008954   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200089b4   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001ad

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x0000da18, Max: 0x00200000, ABSOLUTE, COMPRESSED[0x00005324])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00005200, Max: 0x00200000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001ac   Data   RO         2009    RESET               startup_stm32f429xx.o
    0x080001ac   0x080001ac   0x00000008   Code   RO         2584  * !!!main             c_w.l(__main.o)
    0x080001b4   0x080001b4   0x00000034   Code   RO         2940    !!!scatter          c_w.l(__scatter.o)
    0x080001e8   0x080001e8   0x0000003a   Code   RO         2938    !!dczerorl          c_w.l(__dczerorl.o)
    0x08000222   0x08000222   0x00000002   PAD
    0x08000224   0x08000224   0x0000001c   Code   RO         2942    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000240   0x08000240   0x00000000   Code   RO         2573    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x08000240   0x08000240   0x00000006   Code   RO         2571    .ARM.Collect$$_printf_percent$$00000013  c_w.l(_printf_c.o)
    0x08000246   0x08000246   0x00000004   Code   RO         2597    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x0800024a   0x0800024a   0x00000002   Code   RO         2725    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800024c   0x0800024c   0x00000004   Code   RO         2726    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000250   0x08000250   0x00000000   Code   RO         2729    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000250   0x08000250   0x00000008   Code   RO         2730    .ARM.Collect$$libinit$$00000005  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2732    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2734    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2736    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2739    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2741    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2743    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2745    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2747    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2749    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2751    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2753    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2755    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000000   Code   RO         2757    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000258   0x08000258   0x00000004   Code   RO         2758    .ARM.Collect$$libinit$$00000024  c_w.l(libinit2.o)
    0x0800025c   0x0800025c   0x00000000   Code   RO         2759    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800025c   0x0800025c   0x00000000   Code   RO         2763    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800025c   0x0800025c   0x00000000   Code   RO         2765    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800025c   0x0800025c   0x00000000   Code   RO         2767    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800025c   0x0800025c   0x00000000   Code   RO         2769    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800025c   0x0800025c   0x00000002   Code   RO         2770    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800025e   0x0800025e   0x00000002   Code   RO         2919    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000260   0x08000260   0x00000000   Code   RO         2772    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000260   0x08000260   0x00000000   Code   RO         2774    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000260   0x08000260   0x00000004   Code   RO         2775    .ARM.Collect$$libshutdown$$00000005  c_w.l(libshutdown2.o)
    0x08000264   0x08000264   0x00000000   Code   RO         2776    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x08000264   0x08000264   0x00000000   Code   RO         2779    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x08000264   0x08000264   0x00000000   Code   RO         2782    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000264   0x08000264   0x00000000   Code   RO         2784    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x08000264   0x08000264   0x00000004   Code   RO         2785    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000268   0x08000268   0x00000000   Code   RO         2787    .ARM.Collect$$libshutdown$$00000011  c_w.l(libshutdown2.o)
    0x08000268   0x08000268   0x00000002   Code   RO         2788    .ARM.Collect$$libshutdown$$00000012  c_w.l(libshutdown2.o)
    0x0800026a   0x0800026a   0x00000000   Code   RO         2586    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800026a   0x0800026a   0x00000000   Code   RO         2607    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800026a   0x0800026a   0x00000006   Code   RO         2619    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000270   0x08000270   0x00000008   Code   RO         2608    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000278   0x08000278   0x00000004   Code   RO         2610    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800027c   0x0800027c   0x00000000   Code   RO         2612    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800027c   0x0800027c   0x00000008   Code   RO         2613    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000284   0x08000284   0x00000002   Code   RO         2794    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000286   0x08000286   0x00000000   Code   RO         2852    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000286   0x08000286   0x00000004   Code   RO         2853    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0800028a   0x0800028a   0x00000006   Code   RO         2854    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000290   0x08000290   0x00000000   Code   RO         2859    .emb_text           c_w.l(maybetermalloc2.o)
    0x08000290   0x08000290   0x00000040   Code   RO         2010    .text               startup_stm32f429xx.o
    0x080002d0   0x080002d0   0x000000c8   Code   RO         2423    .text               RTX_CM4F.lib(irq_armv7m.o)
    0x08000398   0x08000398   0x000000ee   Code   RO         2539    .text               c_w.l(lludivv7m.o)
    0x08000486   0x08000486   0x00000002   PAD
    0x08000488   0x08000488   0x00000018   Code   RO         2543    .text               c_w.l(noretval__2printf.o)
    0x080004a0   0x080004a0   0x00000068   Code   RO         2545    .text               c_w.l(__printf.o)
    0x08000508   0x08000508   0x00000052   Code   RO         2547    .text               c_w.l(_printf_str.o)
    0x0800055a   0x0800055a   0x0000008a   Code   RO         2574    .text               c_w.l(rt_memcpy_v6.o)
    0x080005e4   0x080005e4   0x00000044   Code   RO         2576    .text               c_w.l(rt_memclr.o)
    0x08000628   0x08000628   0x0000004e   Code   RO         2578    .text               c_w.l(rt_memclr_w.o)
    0x08000676   0x08000676   0x00000002   PAD
    0x08000678   0x08000678   0x00000080   Code   RO         2580    .text               c_w.l(strcmpv7m.o)
    0x080006f8   0x080006f8   0x00000006   Code   RO         2582    .text               c_w.l(heapauxi.o)
    0x080006fe   0x080006fe   0x0000002c   Code   RO         2593    .text               c_w.l(_printf_char.o)
    0x0800072a   0x0800072a   0x00000064   Code   RO         2604    .text               c_w.l(rt_memcpy_w.o)
    0x0800078e   0x0800078e   0x00000002   PAD
    0x08000790   0x08000790   0x00000030   Code   RO         2623    .text               c_w.l(_printf_char_common.o)
    0x080007c0   0x080007c0   0x000001c8   Code   RO         2637    .text               c_w.l(initio_locked.o)
    0x08000988   0x08000988   0x0000004a   Code   RO         2639    .text               c_w.l(sys_stackheap_outer.o)
    0x080009d2   0x080009d2   0x00000076   Code   RO         2645    .text               c_w.l(h1_free_mt.o)
    0x08000a48   0x08000a48   0x000001d6   Code   RO         2699    .text               c_w.l(flsbuf.o)
    0x08000c1e   0x08000c1e   0x0000004c   Code   RO         2706    .text               c_w.l(fclose.o)
    0x08000c6a   0x08000c6a   0x00000068   Code   RO         2708    .text               c_w.l(setvbuf_locked.o)
    0x08000cd2   0x08000cd2   0x00000002   PAD
    0x08000cd4   0x08000cd4   0x00000144   Code   RO         2710    .text               c_w.l(fopen_locked.o)
    0x08000e18   0x08000e18   0x00000012   Code   RO         2712    .text               c_w.l(exit.o)
    0x08000e2a   0x08000e2a   0x0000000e   Code   RO         2718    .text               c_w.l(defsig_rtred_outer.o)
    0x08000e38   0x08000e38   0x00000008   Code   RO         2791    .text               c_w.l(libspace.o)
    0x08000e40   0x08000e40   0x0000000a   Code   RO         2803    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x08000e4a   0x08000e4a   0x00000004   Code   RO         2805    .text               c_w.l(hguard.o)
    0x08000e4e   0x08000e4e   0x0000008a   Code   RO         2807    .text               c_w.l(init_alloc.o)
    0x08000ed8   0x08000ed8   0x0000009e   Code   RO         2815    .text               c_w.l(h1_alloc_mt.o)
    0x08000f76   0x08000f76   0x00000002   PAD
    0x08000f78   0x08000f78   0x00000040   Code   RO         2827    .text               c_w.l(_printf_char_file_locked.o)
    0x08000fb8   0x08000fb8   0x000000f8   Code   RO         2829    .text               c_w.l(fseek.o)
    0x080010b0   0x080010b0   0x000000f0   Code   RO         2831    .text               c_w.l(stdio.o)
    0x080011a0   0x080011a0   0x0000000a   Code   RO         2837    .text               c_w.l(defsig_exit.o)
    0x080011aa   0x080011aa   0x00000002   PAD
    0x080011ac   0x080011ac   0x00000034   Code   RO         2841    .text               c_w.l(defsig_rtred_inner.o)
    0x080011e0   0x080011e0   0x0000000c   Code   RO         2849    .text               c_w.l(sys_exit.o)
    0x080011ec   0x080011ec   0x00000012   Code   RO         2864    .text               c_w.l(h1_init_mt.o)
    0x080011fe   0x080011fe   0x0000003e   Code   RO         2866    .text               c_w.l(h1_extend_mt.o)
    0x0800123c   0x0800123c   0x00000042   Code   RO         2872    .text               c_w.l(ftell.o)
    0x0800127e   0x0800127e   0x00000032   Code   RO         2880    .text               c_w.l(defsig_general.o)
    0x080012b0   0x080012b0   0x0000000e   Code   RO         2882    .text               c_w.l(defsig_rtmem_outer.o)
    0x080012be   0x080012be   0x0000000e   Code   RO         2895    .text               c_w.l(sys_wrch.o)
    0x080012cc   0x080012cc   0x00000002   Code   RO         2899    .text               c_w.l(use_no_semi.o)
    0x080012ce   0x080012ce   0x00000000   Code   RO         2901    .text               c_w.l(indicate_semi.o)
    0x080012ce   0x080012ce   0x00000004   Code   RO         2907    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x080012d2   0x080012d2   0x00000010   Code   RO         2911    .text               c_w.l(term_alloc.o)
    0x080012e2   0x080012e2   0x00000002   PAD
    0x080012e4   0x080012e4   0x00000050   Code   RO         2913    .text               c_w.l(defsig_rtmem_inner.o)
    0x08001334   0x08001334   0x0000000a   Code   RO         2922    .text               c_w.l(h1_final_mt.o)
    0x0800133e   0x0800133e   0x00000040   Code   RO         2406    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x0800137e   0x0800137e   0x00000058   Code   RO         2400    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080013d6   0x080013d6   0x0000001c   Code   RO         2398    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080013f2   0x080013f2   0x00000002   PAD
    0x080013f4   0x080013f4   0x0000000c   Code   RO         2517    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x08001400   0x08001400   0x0000002c   Code   RO         2513    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x0800142c   0x0800142c   0x00000006   Code   RO         2519    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x08001432   0x08001432   0x00000002   PAD
    0x08001434   0x08001434   0x00000040   Code   RO         2511    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x08001474   0x08001474   0x0000000c   Code   RO         2110    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_kernel.o)
    0x08001480   0x08001480   0x00000006   Code   RO         2252    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_thread.o)
    0x08001486   0x08001486   0x0000000c   Code   RO         2414    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001492   0x08001492   0x00000006   Code   RO         2112    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_kernel.o)
    0x08001498   0x08001498   0x00000064   Code   RO         2204    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x080014fc   0x080014fc   0x00000048   Code   RO         2304    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x08001544   0x08001544   0x00000024   Code   RO         2270    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x08001568   0x08001568   0x00000030   Code   RO         2062    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x08001598   0x08001598   0x00000028   Code   RO         2078    .text.osKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x080015c0   0x080015c0   0x0000002c   Code   RO         2056    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x080015ec   0x080015ec   0x00000024   Code   RO         2066    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x08001610   0x08001610   0x00000070   Code   RO         2374    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001680   0x08001680   0x00000024   Code   RO         2368    .text.osMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080016a4   0x080016a4   0x00000080   Code   RO         2372    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001724   0x08001724   0x00000024   Code   RO         2336    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08001748   0x08001748   0x00000024   Code   RO         2342    .text.osMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x0800176c   0x0800176c   0x00000024   Code   RO         2332    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x08001790   0x08001790   0x00000024   Code   RO         2338    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x080017b4   0x080017b4   0x00000004   Code   RO         2054    .text.osRtxKernelErrorNotify  RTX_CM4F.lib(rtx_kernel.o)
    0x080017b8   0x080017b8   0x00000002   Code   RO         2052    .text.osRtxKernelPreInit  RTX_CM4F.lib(rtx_kernel.o)
    0x080017ba   0x080017ba   0x0000006c   Code   RO         2433    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x08001826   0x08001826   0x00000042   Code   RO         2435    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x08001868   0x08001868   0x00000036   Code   RO         2431    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x0800189e   0x0800189e   0x0000003a   Code   RO         2447    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x080018d8   0x080018d8   0x0000004a   Code   RO         2449    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x08001922   0x08001922   0x00000038   Code   RO         2445    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x0800195a   0x0800195a   0x000000aa   Code   RO         2396    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001a04   0x08001a04   0x00000028   Code   RO         2364    .text.osRtxMessageQueueTimerSetup  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08001a2c   0x08001a2c   0x00000048   Code   RO         2328    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x08001a74   0x08001a74   0x00000042   Code   RO         2330    .text.osRtxMutexOwnerRestore  RTX_CM4F.lib(rtx_mutex.o)
    0x08001ab6   0x08001ab6   0x00000002   PAD
    0x08001ab8   0x08001ab8   0x0000008c   Code   RO         2499    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08001b44   0x08001b44   0x00000074   Code   RO         2501    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x08001bb8   0x08001bb8   0x00000038   Code   RO         2144    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x08001bf0   0x08001bf0   0x00000080   Code   RO         2152    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x08001c70   0x08001c70   0x00000040   Code   RO         2148    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08001cb0   0x08001cb0   0x0000004c   Code   RO         2134    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x08001cfc   0x08001cfc   0x00000024   Code   RO         2236    .text.osRtxThreadDestroy  RTX_CM4F.lib(rtx_thread.o)
    0x08001d20   0x08001d20   0x00000054   Code   RO         2142    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x08001d74   0x08001d74   0x00000058   Code   RO         2228    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x08001dcc   0x08001dcc   0x0000001e   Code   RO         2234    .text.osRtxThreadJoinWakeup  RTX_CM4F.lib(rtx_thread.o)
    0x08001dea   0x08001dea   0x00000012   Code   RO         2126    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x08001dfc   0x08001dfc   0x0000002c   Code   RO         2124    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x08001e28   0x08001e28   0x00000014   Code   RO         2130    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x08001e3c   0x08001e3c   0x0000000c   Code   RO         2136    .text.osRtxThreadListRoot  RTX_CM4F.lib(rtx_thread.o)
    0x08001e48   0x08001e48   0x00000026   Code   RO         2128    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x08001e6e   0x08001e6e   0x00000028   Code   RO         2202    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x08001e96   0x08001e96   0x00000002   PAD
    0x08001e98   0x08001e98   0x00000014   Code   RO         2132    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x08001eac   0x08001eac   0x00000014   Code   RO         2138    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x08001ec0   0x08001ec0   0x0000003c   Code   RO         2154    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x08001efc   0x08001efc   0x00000010   Code   RO         2140    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x08001f0c   0x08001f0c   0x0000003c   Code   RO         2150    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x08001f48   0x08001f48   0x00000030   Code   RO         2146    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x08001f78   0x08001f78   0x00000078   Code   RO         2497    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x08001ff0   0x08001ff0   0x00000020   Code   RO         2286    .text.osRtxTimerSetup  RTX_CM4F.lib(rtx_timer.o)
    0x08002010   0x08002010   0x00000020   Code   RO         2290    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x08002030   0x08002030   0x00000070   Code   RO         2288    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x080020a0   0x080020a0   0x0000000c   Code   RO         2186    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x080020ac   0x080020ac   0x00000028   Code   RO         2162    .text.osThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x080020d4   0x080020d4   0x00000024   Code   RO         2158    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x080020f8   0x080020f8   0x00000024   Code   RO         2176    .text.osThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x0800211c   0x0800211c   0x00000016   Code   RO         2274    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x08002132   0x08002132   0x00000002   PAD
    0x08002134   0x08002134   0x0000000c   Code   RO         2064    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x08002140   0x08002140   0x0000000c   Code   RO         2080    .text.svcRtxKernelGetTickCount  RTX_CM4F.lib(rtx_kernel.o)
    0x0800214c   0x0800214c   0x00000100   Code   RO         2094    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x0800224c   0x0800224c   0x00000088   Code   RO         2096    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x080022d4   0x080022d4   0x000000d8   Code   RO         2408    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080023ac   0x080023ac   0x00000118   Code   RO         2366    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x080024c4   0x080024c4   0x000000b4   Code   RO         2404    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x08002578   0x08002578   0x00000090   Code   RO         2348    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x08002608   0x08002608   0x000000b0   Code   RO         2354    .text.svcRtxMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x080026b8   0x080026b8   0x00000068   Code   RO         2344    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x08002720   0x08002720   0x000000b4   Code   RO         2350    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x080027d4   0x080027d4   0x0000004c   Code   RO         2232    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x08002820   0x08002820   0x0000000c   Code   RO         2164    .text.svcRtxThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x0800282c   0x0800282c   0x000001ec   Code   RO         2156    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x08002a18   0x08002a18   0x00000038   Code   RO         2218    .text.svcRtxThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x08002a50   0x08002a50   0x0000009c   Code   RO          349    i.Disable_SPI_Clock  spi_stm32f4xx.o
    0x08002aec   0x08002aec   0x000001d8   Code   RO          350    i.Enable_GPIO_Clock  spi_stm32f4xx.o
    0x08002cc4   0x08002cc4   0x0000010c   Code   RO          351    i.Enable_SPI_Clock  spi_stm32f4xx.o
    0x08002dd0   0x08002dd0   0x00000004   Code   RO            4    i.Error_Handler     main.o
    0x08002dd4   0x08002dd4   0x0000005c   Code   RO          162    i.GPIO_Init         keypad.o
    0x08002e30   0x08002e30   0x00000028   Code   RO         1099    i.HAL_DMA_Abort_IT  stm32f4xx_hal_dma.o
    0x08002e58   0x08002e58   0x00000184   Code   RO         1242    i.HAL_GPIO_DeInit   stm32f4xx_hal_gpio.o
    0x08002fdc   0x08002fdc   0x00000210   Code   RO         1245    i.HAL_GPIO_Init     stm32f4xx_hal_gpio.o
    0x080031ec   0x080031ec   0x00000010   Code   RO         1247    i.HAL_GPIO_ReadPin  stm32f4xx_hal_gpio.o
    0x080031fc   0x080031fc   0x0000000c   Code   RO         1249    i.HAL_GPIO_WritePin  stm32f4xx_hal_gpio.o
    0x08003208   0x08003208   0x0000000c   Code   RO          771    i.HAL_GetREVID      stm32f4xx_hal.o
    0x08003214   0x08003214   0x00000050   Code   RO            5    i.HAL_GetTick       main.o
    0x08003264   0x08003264   0x00000030   Code   RO          779    i.HAL_Init          stm32f4xx_hal.o
    0x08003294   0x08003294   0x0000004c   Code   RO          780    i.HAL_InitTick      stm32f4xx_hal.o
    0x080032e0   0x080032e0   0x00000002   Code   RO          782    i.HAL_MspInit       stm32f4xx_hal.o
    0x080032e2   0x080032e2   0x00000002   PAD
    0x080032e4   0x080032e4   0x0000002c   Code   RO          959    i.HAL_NVIC_DisableIRQ  stm32f4xx_hal_cortex.o
    0x08003310   0x08003310   0x0000007c   Code   RO          966    i.HAL_NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x0800338c   0x0800338c   0x00000028   Code   RO          967    i.HAL_NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x080033b4   0x080033b4   0x00000184   Code   RO         1501    i.HAL_RCC_ClockConfig  stm32f4xx_hal_rcc.o
    0x08003538   0x08003538   0x0000000c   Code   RO         1506    i.HAL_RCC_GetHCLKFreq  stm32f4xx_hal_rcc.o
    0x08003544   0x08003544   0x00000020   Code   RO         1509    i.HAL_RCC_GetPCLK2Freq  stm32f4xx_hal_rcc.o
    0x08003564   0x08003564   0x000000b0   Code   RO         1510    i.HAL_RCC_GetSysClockFreq  stm32f4xx_hal_rcc.o
    0x08003614   0x08003614   0x0000049c   Code   RO         1513    i.HAL_RCC_OscConfig  stm32f4xx_hal_rcc.o
    0x08003ab0   0x08003ab0   0x00000034   Code   RO          971    i.HAL_SYSTICK_Config  stm32f4xx_hal_cortex.o
    0x08003ae4   0x08003ae4   0x00000030   Code   RO          673    i.ITM_SendChar      retarget_io.o
    0x08003b14   0x08003b14   0x00000024   Code   RO          163    i.Init_MsgQueue_keypad  keypad.o
    0x08003b38   0x08003b38   0x00000018   Code   RO          352    i.SPI1_Control      spi_stm32f4xx.o
    0x08003b50   0x08003b50   0x00000010   Code   RO          353    i.SPI1_GetDataCount  spi_stm32f4xx.o
    0x08003b60   0x08003b60   0x00000010   Code   RO          354    i.SPI1_GetStatus    spi_stm32f4xx.o
    0x08003b70   0x08003b70   0x00000010   Code   RO          355    i.SPI1_IRQHandler   spi_stm32f4xx.o
    0x08003b80   0x08003b80   0x00000014   Code   RO          356    i.SPI1_Initialize   spi_stm32f4xx.o
    0x08003b94   0x08003b94   0x00000014   Code   RO          357    i.SPI1_PowerControl  spi_stm32f4xx.o
    0x08003ba8   0x08003ba8   0x00000018   Code   RO          358    i.SPI1_Receive      spi_stm32f4xx.o
    0x08003bc0   0x08003bc0   0x00000018   Code   RO          359    i.SPI1_Send         spi_stm32f4xx.o
    0x08003bd8   0x08003bd8   0x0000001c   Code   RO          360    i.SPI1_Transfer     spi_stm32f4xx.o
    0x08003bf4   0x08003bf4   0x00000010   Code   RO          361    i.SPI1_Uninitialize  spi_stm32f4xx.o
    0x08003c04   0x08003c04   0x0000000c   Code   RO          362    i.SPIX_GetCapabilities  spi_stm32f4xx.o
    0x08003c10   0x08003c10   0x00000010   Code   RO          363    i.SPIX_GetVersion   spi_stm32f4xx.o
    0x08003c20   0x08003c20   0x000005de   Code   RO          364    i.SPI_Control       spi_stm32f4xx.o
    0x080041fe   0x080041fe   0x00000008   Code   RO          365    i.SPI_GetDataCount  spi_stm32f4xx.o
    0x08004206   0x08004206   0x0000002c   Code   RO          366    i.SPI_GetStatus     spi_stm32f4xx.o
    0x08004232   0x08004232   0x00000112   Code   RO          367    i.SPI_IRQHandler    spi_stm32f4xx.o
    0x08004344   0x08004344   0x000000d4   Code   RO          368    i.SPI_Initialize    spi_stm32f4xx.o
    0x08004418   0x08004418   0x00000124   Code   RO          369    i.SPI_PeripheralReset  spi_stm32f4xx.o
    0x0800453c   0x0800453c   0x0000010c   Code   RO          370    i.SPI_PowerControl  spi_stm32f4xx.o
    0x08004648   0x08004648   0x00000094   Code   RO          371    i.SPI_Receive       spi_stm32f4xx.o
    0x080046dc   0x080046dc   0x00000058   Code   RO          372    i.SPI_RxData        spi_stm32f4xx.o
    0x08004734   0x08004734   0x00000094   Code   RO          373    i.SPI_Send          spi_stm32f4xx.o
    0x080047c8   0x080047c8   0x00000082   Code   RO          374    i.SPI_Transfer      spi_stm32f4xx.o
    0x0800484a   0x0800484a   0x00000054   Code   RO          375    i.SPI_TxData        spi_stm32f4xx.o
    0x0800489e   0x0800489e   0x00000066   Code   RO          376    i.SPI_Uninitialize  spi_stm32f4xx.o
    0x08004904   0x08004904   0x000000c0   Code   RO            6    i.SystemClock_Config  main.o
    0x080049c4   0x080049c4   0x000000c0   Code   RO         2017    i.SystemCoreClockUpdate  system_stm32f4xx.o
    0x08004a84   0x08004a84   0x0000001c   Code   RO         2018    i.SystemInit        system_stm32f4xx.o
    0x08004aa0   0x08004aa0   0x00000030   Code   RO          164    i.Th_keypad         keypad.o
    0x08004ad0   0x08004ad0   0x00000010   Code   RO          973    i.__NVIC_GetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x08004ae0   0x08004ae0   0x00000028   Code   RO          974    i.__NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x08004b08   0x08004b08   0x00000058   Code   RO          221    i.__user_perthread_libspace  rtx_lib.o
    0x08004b60   0x08004b60   0x00000016   Code   RO          222    i._mutex_acquire    rtx_lib.o
    0x08004b76   0x08004b76   0x0000000c   Code   RO          223    i._mutex_free       rtx_lib.o
    0x08004b82   0x08004b82   0x00000022   Code   RO          224    i._mutex_initialize  rtx_lib.o
    0x08004ba4   0x08004ba4   0x00000012   Code   RO          225    i._mutex_release    rtx_lib.o
    0x08004bb6   0x08004bb6   0x00000008   Code   RO          226    i._platform_post_stackheap_init  rtx_lib.o
    0x08004bbe   0x08004bbe   0x00000026   Code   RO          674    i._sys_close        retarget_io.o
    0x08004be4   0x08004be4   0x00000024   Code   RO          675    i._sys_flen         retarget_io.o
    0x08004c08   0x08004c08   0x00000024   Code   RO          676    i._sys_istty        retarget_io.o
    0x08004c2c   0x08004c2c   0x00000068   Code   RO          677    i._sys_open         retarget_io.o
    0x08004c94   0x08004c94   0x0000002c   Code   RO          679    i._sys_seek         retarget_io.o
    0x08004cc0   0x08004cc0   0x00000046   Code   RO          680    i._sys_write        retarget_io.o
    0x08004d06   0x08004d06   0x0000001a   Code   RO         2628    i.fputc             c_w.l(fputc.o)
    0x08004d20   0x08004d20   0x0000002c   Code   RO          166    i.init_Th_keypad    keypad.o
    0x08004d4c   0x08004d4c   0x0000001c   Code   RO            9    i.main              main.o
    0x08004d68   0x08004d68   0x00000020   Code   RO          315    i.osRtxErrorNotify  rtx_config.o
    0x08004d88   0x08004d88   0x00000004   Code   RO          316    i.osRtxIdleThread   rtx_config.o
    0x08004d8c   0x08004d8c   0x00000020   Code   RO          227    i.os_kernel_is_active  rtx_lib.o
    0x08004dac   0x08004dac   0x00000224   Code   RO          167    i.read_keypad       keypad.o
    0x08004fd0   0x08004fd0   0x0000000c   Code   RO          681    i.stdout_putchar    retarget_io.o
    0x08004fdc   0x08004fdc   0x0000000a   Code   RO         2847    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08004fe6   0x08004fe6   0x00000002   PAD
    0x08004fe8   0x08004fe8   0x00000068   Data   RO          235    .constdata          rtx_lib.o
    0x08005050   0x08005050   0x00000090   Data   RO          378    .constdata          spi_stm32f4xx.o
    0x080050e0   0x080050e0   0x00000018   Data   RO          557    .constdata          eventrecorder.o
    0x080050f8   0x080050f8   0x00000017   Data   RO          682    .constdata          retarget_io.o
    0x0800510f   0x0800510f   0x00000018   Data   RO         2019    .constdata          system_stm32f4xx.o
    0x08005127   0x08005127   0x00000001   PAD
    0x08005128   0x08005128   0x000000a8   Data   RO          237    .rodata             rtx_lib.o
    0x080051d0   0x080051d0   0x00000001   Data   RO         2424    .rodata             RTX_CM4F.lib(irq_armv7m.o)
    0x080051d1   0x080051d1   0x00000003   PAD
    0x080051d4   0x080051d4   0x0000000b   Data   RO         2114    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x080051df   0x080051df   0x00000001   PAD
    0x080051e0   0x080051e0   0x00000020   Data   RO         2936    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08005200, Size: 0x0000a068, Max: 0x00030000, ABSOLUTE, COMPRESSED[0x00000124])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00008040   Data   RW          228    .bss.os             rtx_lib.o
    0x20008040   COMPRESSED   0x000001f0   Data   RW          229    .bss.os.libspace    rtx_lib.o
    0x20008230   COMPRESSED   0x00000034   Data   RW          230    .bss.os.msgqueue.cb  rtx_lib.o
    0x20008264   COMPRESSED   0x00000050   Data   RW          231    .bss.os.msgqueue.mem  rtx_lib.o
    0x200082b4   COMPRESSED   0x00000088   Data   RW          232    .bss.os.thread.cb   rtx_lib.o
    0x2000833c   COMPRESSED   0x00000004   PAD
    0x20008340   COMPRESSED   0x00000200   Data   RW          233    .bss.os.thread.idle.stack  rtx_lib.o
    0x20008540   COMPRESSED   0x00000200   Data   RW          234    .bss.os.thread.timer.stack  rtx_lib.o
    0x20008740   COMPRESSED   0x00000008   Data   RW           10    .data               main.o
    0x20008748   COMPRESSED   0x00000009   Data   RW          169    .data               keypad.o
    0x20008751   COMPRESSED   0x00000001   Data   RW          236    .data               rtx_lib.o
    0x20008752   COMPRESSED   0x00000002   PAD
    0x20008754   COMPRESSED   0x00000009   Data   RW          786    .data               stm32f4xx_hal.o
    0x2000875d   COMPRESSED   0x00000003   PAD
    0x20008760   COMPRESSED   0x00000004   Data   RW         2020    .data               system_stm32f4xx.o
    0x20008764   COMPRESSED   0x00000004   Data   RW         2601    .data               c_w.l(stdio_streams.o)
    0x20008768   COMPRESSED   0x00000004   Data   RW         2602    .data               c_w.l(stdio_streams.o)
    0x2000876c   COMPRESSED   0x00000004   Data   RW         2603    .data               c_w.l(stdio_streams.o)
    0x20008770   COMPRESSED   0x00000004   Data   RW         2703    .data               c_w.l(streamlock.o)
    0x20008774   COMPRESSED   0x000000a4   Data   RW         2115    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x20008818        -       0x00000014   Zero   RW          168    .bss                keypad.o
    0x2000882c        -       0x0000002c   Zero   RW          377    .bss                spi_stm32f4xx.o
    0x20008858        -       0x00000054   Zero   RW         2598    .bss                c_w.l(stdio_streams.o)
    0x200088ac        -       0x00000054   Zero   RW         2599    .bss                c_w.l(stdio_streams.o)
    0x20008900        -       0x00000054   Zero   RW         2600    .bss                c_w.l(stdio_streams.o)
    0x20008954        -       0x00000060   Zero   RW         2792    .bss                c_w.l(libspace.o)
    0x200089b4   COMPRESSED   0x0000000c   PAD
    0x200089c0        -       0x000010a4   Zero   RW          556    .bss.noinit         eventrecorder.o
    0x20009a64        -       0x00000001   Zero   RW         2529    .bss.os             RTX_CM4F.lib(os_systick.o)
    0x20009a65   COMPRESSED   0x00000003   PAD
    0x20009a68        -       0x00000200   Zero   RW         2008    HEAP                startup_stm32f429xx.o
    0x20009c68        -       0x00000400   Zero   RW         2007    STACK               startup_stm32f429xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0         24          0       4260       4144   eventrecorder.o
       768         52          0          9         20       7241   keypad.o
       304         24          0          8          0     716909   main.o
       388         30         23          0          0       7066   retarget_io.o
        36          6          0          0          0       1101   rtx_config.o
       214         12        272      34621          0      13854   rtx_lib.o
      4428        210        144          0         44      60535   spi_stm32f4xx.o
        64         26        428          0       1536        884   startup_stm32f429xx.o
       138         20          0          9          0       9366   stm32f4xx_hal.o
       316         28          0          0          0      35040   stm32f4xx_hal_cortex.o
        40          0          0          0          0       1383   stm32f4xx_hal_dma.o
       944        102          0          0          0       4065   stm32f4xx_hal_gpio.o
      1788         74          0          0          0       5481   stm32f4xx_hal_rcc.o
       220         26         24          4          0       2051   system_stm32f4xx.o

    ----------------------------------------------------------------------
      9650        610        948      34660       5860     869120   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          1          9          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       200         12          1          0          0        634   irq_armv7m.o
       126         32          0          0          1       3200   os_systick.o
        58          4          0          0          0       2791   rtx_delay.o
       608         60         11        164          0      16501   rtx_kernel.o
       228          0          0          0          0       2537   rtx_memory.o
       188          0          0          0          0      16008   rtx_mempool.o
      1354         36          0          0          0      18657   rtx_msgqueue.o
       886         32          0          0          0       9962   rtx_mutex.o
       376         26          0          0          0       5296   rtx_system.o
      1824        104          0          0          0      31847   rtx_thread.o
       248         16          0          0          0      10397   rtx_timer.o
        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
       104          0          0          0          0         84   __printf.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
         6          0          0          0          0          0   _printf_c.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
        64          6          0          0          0         84   _printf_char_file_locked.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
        82          0          0          0          0         80   _printf_str.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        52         38          0          0          0         76   defsig_rtred_inner.o
        14          0          0          0          0         80   defsig_rtred_outer.o
        18          0          0          0          0         80   exit.o
        76          0          0          0          0         88   fclose.o
       470          0          0          0          0         88   flsbuf.o
       324          8          0          0          0        152   fopen_locked.o
        26          0          0          0          0         68   fputc.o
       248          6          0          0          0         84   fseek.o
        66          0          0          0          0         76   ftell.o
       158          0          0          0          0        128   h1_alloc_mt.o
        62          0          0          0          0         80   h1_extend_mt.o
        10          0          0          0          0         76   h1_final_mt.o
       118          0          0          0          0        108   h1_free_mt.o
        18          0          0          0          0         84   h1_init_mt.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
       456         48          0          0          0        116   initio_locked.o
         2          0          0          0          0          0   libinit.o
        18          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
        10          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       238          0          0          0          0        100   lludivv7m.o
         0          0          0          0          0          0   maybetermalloc2.o
        24          4          0          0          0         84   noretval__2printf.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       104          0          0          0          0         88   setvbuf_locked.o
       240          6          0          0          0        156   stdio.o
         0          0          0         12        252          0   stdio_streams.o
       128          0          0          0          0         68   strcmpv7m.o
         0          0          0          4          0          0   streamlock.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
         2          0          0          0          0         68   use_no_semi.o
        10          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
     10378        518         16        180        364     121994   Library Totals
        28          0          4          0         15          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      6096        322         12        164          1     117830   RTX_CM4F.lib
      4244        196          0         16        348       4048   c_w.l
        10          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
     10378        518         16        180        364     121994   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     20028       1128        964      34840       6224     981686   Grand Totals
     20028       1128        964        292       6224     981686   ELF Image Totals (compressed)
     20028       1128        964        292          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                20992 (  20.50kB)
    Total RW  Size (RW Data + ZI Data)             41064 (  40.10kB)
    Total ROM Size (Code + RO Data + RW Data)      21284 (  20.79kB)

==============================================================================

